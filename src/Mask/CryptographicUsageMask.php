<?php

/**
 * DO NOT EDIT. This file is auto-generated by stoakes/kmip-php code generator
 */

declare(strict_types=1);

namespace Stoakes\Kmip\Mask;

enum CryptographicUsageMask: int
{
    /** 0x00000001 */
    case Sign = 1;

    /** 0x00000002 */
    case Verify = 2;

    /** 0x00000004 */
    case Encrypt = 4;

    /** 0x00000008 */
    case Decrypt = 8;

    /** 0x00000010 */
    case WrapKey = 16;

    /** 0x00000020 */
    case UnwrapKey = 32;

    /** 0x00000040 */
    case Export = 64;

    /** 0x00000080 */
    case MACGenerate = 128;

    /** 0x00000100 */
    case MACVerify = 256;

    /** 0x00000200 */
    case DeriveKey = 512;

    /** 0x00000400 */
    case ContentCommitment = 1024;

    /** 0x00000800 */
    case KeyAgreement = 2048;

    /** 0x00001000 */
    case CertificateSign = 4096;

    /** 0x00002000 */
    case CRLSign = 8192;

    /** 0x00004000 */
    case GenerateCryptogram = 16384;

    /** 0x00008000 */
    case ValidateCryptogram = 32768;

    /** 0x00010000 */
    case TranslateEncrypt = 65536;

    /** 0x00020000 */
    case TranslateDecrypt = 131072;

    /** 0x00040000 */
    case TranslateWrap = 262144;

    /** 0x00080000 */
    case TranslateUnwrap = 524288;

    public function valueToCanonicalName(self $value): string
    {
        return match($value) {
            self::Sign => 'Sign',
            self::Verify => 'Verify',
            self::Encrypt => 'Encrypt',
            self::Decrypt => 'Decrypt',
            self::WrapKey => 'Wrap Key',
            self::UnwrapKey => 'Unwrap Key',
            self::Export => 'Export',
            self::MACGenerate => 'MAC Generate',
            self::MACVerify => 'MAC Verify',
            self::DeriveKey => 'Derive Key',
            self::ContentCommitment => 'Content Commitment',
            self::KeyAgreement => 'Key Agreement',
            self::CertificateSign => 'Certificate Sign',
            self::CRLSign => 'CRL Sign',
            self::GenerateCryptogram => 'Generate Cryptogram',
            self::ValidateCryptogram => 'Validate Cryptogram',
            self::TranslateEncrypt => 'Translate Encrypt',
            self::TranslateDecrypt => 'Translate Decrypt',
            self::TranslateWrap => 'Translate Wrap',
            self::TranslateUnwrap => 'Translate Unwrap',
        };
    }

    public function canonicalName(): string
    {
        return self::valueToCanonicalName($this);
    }
}
