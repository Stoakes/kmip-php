<?php

/**
 * DO NOT EDIT. This file is auto-generated by stoakes/kmip-php code generator
 */

declare(strict_types=1);

namespace Stoakes\Kmip\Tag;

enum Tag: int
{
    /** 0x00420001 */
    case ActivationDate = 4325377;

    /** 0x00420002 */
    case ApplicationData = 4325378;

    /** 0x00420003 */
    case ApplicationNamespace = 4325379;

    /** 0x00420004 */
    case ApplicationSpecificInformation = 4325380;

    /** 0x00420005 */
    case ArchiveDate = 4325381;

    /** 0x00420006 */
    case AsynchronousCorrelationValue = 4325382;

    /** 0x00420007 */
    case AsynchronousIndicator = 4325383;

    /** 0x00420008 */
    case Attribute = 4325384;

    /** 0x00420009 */
    case AttributeIndex = 4325385;

    /** 0x0042000A */
    case AttributeName = 4325386;

    /** 0x0042000B */
    case AttributeValue = 4325387;

    /** 0x0042000C */
    case Authentication = 4325388;

    /** 0x0042000D */
    case BatchCount = 4325389;

    /** 0x0042000E */
    case BatchErrorContinuationOption = 4325390;

    /** 0x0042000F */
    case BatchItem = 4325391;

    /** 0x00420010 */
    case BatchOrderOption = 4325392;

    /** 0x00420011 */
    case BlockCipherMode = 4325393;

    /** 0x00420012 */
    case CancellationResult = 4325394;

    /** 0x00420013 */
    case Certificate = 4325395;

    /** 0x00420014 */
    case CertificateIdentifier = 4325396;

    /** 0x00420015 */
    case CertificateIssuer = 4325397;

    /** 0x00420016 */
    case CertificateIssuerAlternativeName = 4325398;

    /** 0x00420017 */
    case CertificateIssuerDistinguishedName = 4325399;

    /** 0x00420018 */
    case CertificateRequest = 4325400;

    /** 0x00420019 */
    case CertificateRequestType = 4325401;

    /** 0x0042001A */
    case CertificateSubject = 4325402;

    /** 0x0042001B */
    case CertificateSubjectAlternativeName = 4325403;

    /** 0x0042001C */
    case CertificateSubjectDistinguishedName = 4325404;

    /** 0x0042001D */
    case CertificateType = 4325405;

    /** 0x0042001E */
    case CertificateValue = 4325406;

    /** 0x0042001F */
    case CommonTemplateAttribute = 4325407;

    /** 0x00420020 */
    case CompromiseDate = 4325408;

    /** 0x00420021 */
    case CompromiseOccurrenceDate = 4325409;

    /** 0x00420022 */
    case ContactInformation = 4325410;

    /** 0x00420023 */
    case Credential = 4325411;

    /** 0x00420024 */
    case CredentialType = 4325412;

    /** 0x00420025 */
    case CredentialValue = 4325413;

    /** 0x00420026 */
    case CriticalityIndicator = 4325414;

    /** 0x00420027 */
    case CRTCoefficient = 4325415;

    /** 0x00420028 */
    case CryptographicAlgorithm = 4325416;

    /** 0x00420029 */
    case CryptographicDomainParameters = 4325417;

    /** 0x0042002A */
    case CryptographicLength = 4325418;

    /** 0x0042002B */
    case CryptographicParameters = 4325419;

    /** 0x0042002C */
    case CryptographicUsageMask = 4325420;

    /** 0x0042002D */
    case CustomAttribute = 4325421;

    /** 0x0042002E */
    case D = 4325422;

    /** 0x0042002F */
    case DeactivationDate = 4325423;

    /** 0x00420030 */
    case DerivationData = 4325424;

    /** 0x00420031 */
    case DerivationMethod = 4325425;

    /** 0x00420032 */
    case DerivationParameters = 4325426;

    /** 0x00420033 */
    case DestroyDate = 4325427;

    /** 0x00420034 */
    case Digest = 4325428;

    /** 0x00420035 */
    case DigestValue = 4325429;

    /** 0x00420036 */
    case EncryptionKeyInformation = 4325430;

    /** 0x00420037 */
    case G = 4325431;

    /** 0x00420038 */
    case HashingAlgorithm = 4325432;

    /** 0x00420039 */
    case InitialDate = 4325433;

    /** 0x0042003A */
    case InitializationVector = 4325434;

    /** 0x0042003B */
    case Issuer = 4325435;

    /** 0x0042003C */
    case IterationCount = 4325436;

    /** 0x0042003D */
    case IVCounterNonce = 4325437;

    /** 0x0042003E */
    case J = 4325438;

    /** 0x0042003F */
    case Key = 4325439;

    /** 0x00420040 */
    case KeyBlock = 4325440;

    /** 0x00420041 */
    case KeyCompressionType = 4325441;

    /** 0x00420042 */
    case KeyFormatType = 4325442;

    /** 0x00420043 */
    case KeyMaterial = 4325443;

    /** 0x00420044 */
    case KeyPartIdentifier = 4325444;

    /** 0x00420045 */
    case KeyValue = 4325445;

    /** 0x00420046 */
    case KeyWrappingData = 4325446;

    /** 0x00420047 */
    case KeyWrappingSpecification = 4325447;

    /** 0x00420048 */
    case LastChangeDate = 4325448;

    /** 0x00420049 */
    case LeaseTime = 4325449;

    /** 0x0042004A */
    case Link = 4325450;

    /** 0x0042004B */
    case LinkType = 4325451;

    /** 0x0042004C */
    case LinkedObjectIdentifier = 4325452;

    /** 0x0042004D */
    case MACSignature = 4325453;

    /** 0x0042004E */
    case MACSignatureKeyInformation = 4325454;

    /** 0x0042004F */
    case MaximumItems = 4325455;

    /** 0x00420050 */
    case MaximumResponseSize = 4325456;

    /** 0x00420051 */
    case MessageExtension = 4325457;

    /** 0x00420052 */
    case Modulus = 4325458;

    /** 0x00420053 */
    case Name = 4325459;

    /** 0x00420054 */
    case NameType = 4325460;

    /** 0x00420055 */
    case NameValue = 4325461;

    /** 0x00420056 */
    case ObjectGroup = 4325462;

    /** 0x00420057 */
    case ObjectType = 4325463;

    /** 0x00420058 */
    case Offset = 4325464;

    /** 0x00420059 */
    case OpaqueDataType = 4325465;

    /** 0x0042005A */
    case OpaqueDataValue = 4325466;

    /** 0x0042005B */
    case OpaqueObject = 4325467;

    /** 0x0042005C */
    case Operation = 4325468;

    /** 0x0042005D */
    case OperationPolicyName = 4325469;

    /** 0x0042005E */
    case P = 4325470;

    /** 0x0042005F */
    case PaddingMethod = 4325471;

    /** 0x00420060 */
    case PrimeExponentP = 4325472;

    /** 0x00420061 */
    case PrimeExponentQ = 4325473;

    /** 0x00420062 */
    case PrimeFieldSize = 4325474;

    /** 0x00420063 */
    case PrivateExponent = 4325475;

    /** 0x00420064 */
    case PrivateKey = 4325476;

    /** 0x00420065 */
    case PrivateKeyTemplateAttribute = 4325477;

    /** 0x00420066 */
    case PrivateKeyUniqueIdentifier = 4325478;

    /** 0x00420067 */
    case ProcessStartDate = 4325479;

    /** 0x00420068 */
    case ProtectStopDate = 4325480;

    /** 0x00420069 */
    case ProtocolVersion = 4325481;

    /** 0x0042006A */
    case ProtocolVersionMajor = 4325482;

    /** 0x0042006B */
    case ProtocolVersionMinor = 4325483;

    /** 0x0042006C */
    case PublicExponent = 4325484;

    /** 0x0042006D */
    case PublicKey = 4325485;

    /** 0x0042006E */
    case PublicKeyTemplateAttribute = 4325486;

    /** 0x0042006F */
    case PublicKeyUniqueIdentifier = 4325487;

    /** 0x00420070 */
    case PutFunction = 4325488;

    /** 0x00420071 */
    case Q = 4325489;

    /** 0x00420072 */
    case QString = 4325490;

    /** 0x00420073 */
    case Qlength = 4325491;

    /** 0x00420074 */
    case QueryFunction = 4325492;

    /** 0x00420075 */
    case RecommendedCurve = 4325493;

    /** 0x00420076 */
    case ReplacedUniqueIdentifier = 4325494;

    /** 0x00420077 */
    case RequestHeader = 4325495;

    /** 0x00420078 */
    case RequestMessage = 4325496;

    /** 0x00420079 */
    case RequestPayload = 4325497;

    /** 0x0042007A */
    case ResponseHeader = 4325498;

    /** 0x0042007B */
    case ResponseMessage = 4325499;

    /** 0x0042007C */
    case ResponsePayload = 4325500;

    /** 0x0042007D */
    case ResultMessage = 4325501;

    /** 0x0042007E */
    case ResultReason = 4325502;

    /** 0x0042007F */
    case ResultStatus = 4325503;

    /** 0x00420080 */
    case RevocationMessage = 4325504;

    /** 0x00420081 */
    case RevocationReason = 4325505;

    /** 0x00420082 */
    case RevocationReasonCode = 4325506;

    /** 0x00420083 */
    case KeyRoleType = 4325507;

    /** 0x00420084 */
    case Salt = 4325508;

    /** 0x00420085 */
    case SecretData = 4325509;

    /** 0x00420086 */
    case SecretDataType = 4325510;

    /** 0x00420087 */
    case SerialNumber = 4325511;

    /** 0x00420088 */
    case ServerInformation = 4325512;

    /** 0x00420089 */
    case SplitKey = 4325513;

    /** 0x0042008A */
    case SplitKeyMethod = 4325514;

    /** 0x0042008B */
    case SplitKeyParts = 4325515;

    /** 0x0042008C */
    case SplitKeyThreshold = 4325516;

    /** 0x0042008D */
    case State = 4325517;

    /** 0x0042008E */
    case StorageStatusMask = 4325518;

    /** 0x0042008F */
    case SymmetricKey = 4325519;

    /** 0x00420090 */
    case Template = 4325520;

    /** 0x00420091 */
    case TemplateAttribute = 4325521;

    /** 0x00420092 */
    case TimeStamp = 4325522;

    /** 0x00420093 */
    case UniqueBatchItemID = 4325523;

    /** 0x00420094 */
    case UniqueIdentifier = 4325524;

    /** 0x00420095 */
    case UsageLimits = 4325525;

    /** 0x00420096 */
    case UsageLimitsCount = 4325526;

    /** 0x00420097 */
    case UsageLimitsTotal = 4325527;

    /** 0x00420098 */
    case UsageLimitsUnit = 4325528;

    /** 0x00420099 */
    case Username = 4325529;

    /** 0x0042009A */
    case ValidityDate = 4325530;

    /** 0x0042009B */
    case ValidityIndicator = 4325531;

    /** 0x0042009C */
    case VendorExtension = 4325532;

    /** 0x0042009D */
    case VendorIdentification = 4325533;

    /** 0x0042009E */
    case WrappingMethod = 4325534;

    /** 0x0042009F */
    case X = 4325535;

    /** 0x004200A0 */
    case Y = 4325536;

    /** 0x004200A1 */
    case Password = 4325537;

    /** 0x004200A2 */
    case DeviceIdentifier = 4325538;

    /** 0x004200A3 */
    case EncodingOption = 4325539;

    /** 0x004200A4 */
    case ExtensionInformation = 4325540;

    /** 0x004200A5 */
    case ExtensionName = 4325541;

    /** 0x004200A6 */
    case ExtensionTag = 4325542;

    /** 0x004200A7 */
    case ExtensionType = 4325543;

    /** 0x004200A8 */
    case Fresh = 4325544;

    /** 0x004200A9 */
    case MachineIdentifier = 4325545;

    /** 0x004200AA */
    case MediaIdentifier = 4325546;

    /** 0x004200AB */
    case NetworkIdentifier = 4325547;

    /** 0x004200AC */
    case ObjectGroupMember = 4325548;

    /** 0x004200AD */
    case CertificateLength = 4325549;

    /** 0x004200AE */
    case DigitalSignatureAlgorithm = 4325550;

    /** 0x004200AF */
    case CertificateSerialNumber = 4325551;

    /** 0x004200B0 */
    case DeviceSerialNumber = 4325552;

    /** 0x004200B1 */
    case IssuerAlternativeName = 4325553;

    /** 0x004200B2 */
    case IssuerDistinguishedName = 4325554;

    /** 0x004200B3 */
    case SubjectAlternativeName = 4325555;

    /** 0x004200B4 */
    case SubjectDistinguishedName = 4325556;

    /** 0x004200B5 */
    case X_509CertificateIdentifier = 4325557;

    /** 0x004200B6 */
    case X_509CertificateIssuer = 4325558;

    /** 0x004200B7 */
    case X_509CertificateSubject = 4325559;

    /** 0x004200B8 */
    case KeyValueLocation = 4325560;

    /** 0x004200B9 */
    case KeyValueLocationValue = 4325561;

    /** 0x004200BA */
    case KeyValueLocationType = 4325562;

    /** 0x004200BB */
    case KeyValuePresent = 4325563;

    /** 0x004200BC */
    case OriginalCreationDate = 4325564;

    /** 0x004200BD */
    case PGPKey = 4325565;

    /** 0x004200BE */
    case PGPKeyVersion = 4325566;

    /** 0x004200BF */
    case AlternativeName = 4325567;

    /** 0x004200C0 */
    case AlternativeNameValue = 4325568;

    /** 0x004200C1 */
    case AlternativeNameType = 4325569;

    /** 0x004200C2 */
    case Data = 4325570;

    /** 0x004200C3 */
    case SignatureData = 4325571;

    /** 0x004200C4 */
    case DataLength = 4325572;

    /** 0x004200C5 */
    case RandomIV = 4325573;

    /** 0x004200C6 */
    case MACData = 4325574;

    /** 0x004200C7 */
    case AttestationType = 4325575;

    /** 0x004200C8 */
    case Nonce = 4325576;

    /** 0x004200C9 */
    case NonceID = 4325577;

    /** 0x004200CA */
    case NonceValue = 4325578;

    /** 0x004200CB */
    case AttestationMeasurement = 4325579;

    /** 0x004200CC */
    case AttestationAssertion = 4325580;

    /** 0x004200CD */
    case IVLength = 4325581;

    /** 0x004200CE */
    case TagLength = 4325582;

    /** 0x004200CF */
    case FixedFieldLength = 4325583;

    /** 0x004200D0 */
    case CounterLength = 4325584;

    /** 0x004200D1 */
    case InitialCounterValue = 4325585;

    /** 0x004200D2 */
    case InvocationFieldLength = 4325586;

    /** 0x004200D3 */
    case AttestationCapableIndicator = 4325587;

    /** 0x004200D4 */
    case OffsetItems = 4325588;

    /** 0x004200D5 */
    case LocatedItems = 4325589;

    /** 0x004200D6 */
    case CorrelationValue = 4325590;

    /** 0x004200D7 */
    case InitIndicator = 4325591;

    /** 0x004200D8 */
    case FinalIndicator = 4325592;

    /** 0x004200D9 */
    case RNGParameters = 4325593;

    /** 0x004200DA */
    case RNGAlgorithm = 4325594;

    /** 0x004200DB */
    case DRBGAlgorithm = 4325595;

    /** 0x004200DC */
    case FIPS186Variation = 4325596;

    /** 0x004200DD */
    case PredictionResistance = 4325597;

    /** 0x004200DE */
    case RandomNumberGenerator = 4325598;

    /** 0x004200DF */
    case ValidationInformation = 4325599;

    /** 0x004200E0 */
    case ValidationAuthorityType = 4325600;

    /** 0x004200E1 */
    case ValidationAuthorityCountry = 4325601;

    /** 0x004200E2 */
    case ValidationAuthorityURI = 4325602;

    /** 0x004200E3 */
    case ValidationVersionMajor = 4325603;

    /** 0x004200E4 */
    case ValidationVersionMinor = 4325604;

    /** 0x004200E5 */
    case ValidationType = 4325605;

    /** 0x004200E6 */
    case ValidationLevel = 4325606;

    /** 0x004200E7 */
    case ValidationCertificateIdentifier = 4325607;

    /** 0x004200E8 */
    case ValidationCertificateURI = 4325608;

    /** 0x004200E9 */
    case ValidationVendorURI = 4325609;

    /** 0x004200EA */
    case ValidationProfile = 4325610;

    /** 0x004200EB */
    case ProfileInformation = 4325611;

    /** 0x004200EC */
    case ProfileName = 4325612;

    /** 0x004200ED */
    case ServerURI = 4325613;

    /** 0x004200EE */
    case ServerPort = 4325614;

    /** 0x004200EF */
    case StreamingCapability = 4325615;

    /** 0x004200F0 */
    case AsynchronousCapability = 4325616;

    /** 0x004200F1 */
    case AttestationCapability = 4325617;

    /** 0x004200F2 */
    case UnwrapMode = 4325618;

    /** 0x004200F3 */
    case DestroyAction = 4325619;

    /** 0x004200F4 */
    case ShreddingAlgorithm = 4325620;

    /** 0x004200F5 */
    case RNGMode = 4325621;

    /** 0x004200F6 */
    case ClientRegistrationMethod = 4325622;

    /** 0x004200F7 */
    case CapabilityInformation = 4325623;

    /** 0x004200F8 */
    case KeyWrapType = 4325624;

    /** 0x004200F9 */
    case BatchUndoCapability = 4325625;

    /** 0x004200FA */
    case BatchContinueCapability = 4325626;

    /** 0x004200FB */
    case PKCS_12FriendlyName = 4325627;

    /** 0x004200FC */
    case Description = 4325628;

    /** 0x004200FD */
    case Comment = 4325629;

    /** 0x004200FE */
    case AuthenticatedEncryptionAdditionalData = 4325630;

    /** 0x004200FF */
    case AuthenticatedEncryptionTag = 4325631;

    /** 0x00420100 */
    case SaltLength = 4325632;

    /** 0x00420101 */
    case MaskGenerator = 4325633;

    /** 0x00420102 */
    case MaskGeneratorHashingAlgorithm = 4325634;

    /** 0x00420103 */
    case PSource = 4325635;

    /** 0x00420104 */
    case TrailerField = 4325636;

    /** 0x00420105 */
    case ClientCorrelationValue = 4325637;

    /** 0x00420106 */
    case ServerCorrelationValue = 4325638;

    /** 0x00420107 */
    case DigestedData = 4325639;

    /** 0x00420108 */
    case CertificateSubjectCN = 4325640;

    /** 0x00420109 */
    case CertificateSubjectO = 4325641;

    /** 0x0042010A */
    case CertificateSubjectOU = 4325642;

    /** 0x0042010B */
    case CertificateSubjectEmail = 4325643;

    /** 0x0042010C */
    case CertificateSubjectC = 4325644;

    /** 0x0042010D */
    case CertificateSubjectST = 4325645;

    /** 0x0042010E */
    case CertificateSubjectL = 4325646;

    /** 0x0042010F */
    case CertificateSubjectUID = 4325647;

    /** 0x00420110 */
    case CertificateSubjectSerialNumber = 4325648;

    /** 0x00420111 */
    case CertificateSubjectTitle = 4325649;

    /** 0x00420112 */
    case CertificateSubjectDC = 4325650;

    /** 0x00420113 */
    case CertificateSubjectDNQualifier = 4325651;

    /** 0x00420114 */
    case CertificateIssuerCN = 4325652;

    /** 0x00420115 */
    case CertificateIssuerO = 4325653;

    /** 0x00420116 */
    case CertificateIssuerOU = 4325654;

    /** 0x00420117 */
    case CertificateIssuerEmail = 4325655;

    /** 0x00420118 */
    case CertificateIssuerC = 4325656;

    /** 0x00420119 */
    case CertificateIssuerST = 4325657;

    /** 0x0042011A */
    case CertificateIssuerL = 4325658;

    /** 0x0042011B */
    case CertificateIssuerUID = 4325659;

    /** 0x0042011C */
    case CertificateIssuerSerialNumber = 4325660;

    /** 0x0042011D */
    case CertificateIssuerTitle = 4325661;

    /** 0x0042011E */
    case CertificateIssuerDC = 4325662;

    /** 0x0042011F */
    case CertificateIssuerDNQualifier = 4325663;

    /** 0x00420120 */
    case Sensitive = 4325664;

    /** 0x00420121 */
    case AlwaysSensitive = 4325665;

    /** 0x00420122 */
    case Extractable = 4325666;

    /** 0x00420123 */
    case NeverExtractable = 4325667;

    /** 0x00420124 */
    case ReplaceExisting = 4325668;

    /** 0x00420125 */
    case Attributes = 4325669;

    /** 0x00420126 */
    case CommonAttributes = 4325670;

    /** 0x00420127 */
    case PrivateKeyAttributes = 4325671;

    /** 0x00420128 */
    case PublicKeyAttributes = 4325672;

    /** 0x00420129 */
    case ExtensionEnumeration = 4325673;

    /** 0x0042012A */
    case ExtensionAttribute = 4325674;

    /** 0x0042012B */
    case ExtensionParentStructureTag = 4325675;

    /** 0x0042012C */
    case ExtensionDescription = 4325676;

    /** 0x0042012D */
    case ServerName = 4325677;

    /** 0x0042012E */
    case ServerSerialNumber = 4325678;

    /** 0x0042012F */
    case ServerVersion = 4325679;

    /** 0x00420130 */
    case ServerLoad = 4325680;

    /** 0x00420131 */
    case ProductName = 4325681;

    /** 0x00420132 */
    case BuildLevel = 4325682;

    /** 0x00420133 */
    case BuildDate = 4325683;

    /** 0x00420134 */
    case ClusterInfo = 4325684;

    /** 0x00420135 */
    case AlternateFailoverEndpoints = 4325685;

    /** 0x00420136 */
    case ShortUniqueIdentifier = 4325686;

    /** 0x00420137 */
    case Reserved = 4325687;

    /** 0x00420138 */
    case Tag = 4325688;

    /** 0x00420139 */
    case CertificateRequestUniqueIdentifier = 4325689;

    /** 0x0042013A */
    case NISTKeyType = 4325690;

    /** 0x0042013B */
    case AttributeReference = 4325691;

    /** 0x0042013C */
    case CurrentAttribute = 4325692;

    /** 0x0042013D */
    case NewAttribute = 4325693;

    /** 0x00420140 */
    case CertificateRequestValue = 4325696;

    /** 0x00420141 */
    case LogMessage = 4325697;

    /** 0x00420142 */
    case ProfileVersion = 4325698;

    /** 0x00420143 */
    case ProfileVersionMajor = 4325699;

    /** 0x00420144 */
    case ProfileVersionMinor = 4325700;

    /** 0x00420145 */
    case ProtectionLevel = 4325701;

    /** 0x00420146 */
    case ProtectionPeriod = 4325702;

    /** 0x00420147 */
    case QuantumSafe = 4325703;

    /** 0x00420148 */
    case QuantumSafeCapability = 4325704;

    /** 0x00420149 */
    case Ticket = 4325705;

    /** 0x0042014A */
    case TicketType = 4325706;

    /** 0x0042014B */
    case TicketValue = 4325707;

    /** 0x0042014C */
    case RequestCount = 4325708;

    /** 0x0042014D */
    case Rights = 4325709;

    /** 0x0042014E */
    case Objects = 4325710;

    /** 0x0042014F */
    case Operations = 4325711;

    /** 0x00420150 */
    case Right = 4325712;

    /** 0x00420151 */
    case EndpointRole = 4325713;

    /** 0x00420152 */
    case DefaultsInformation = 4325714;

    /** 0x00420153 */
    case ObjectDefaults = 4325715;

    /** 0x00420154 */
    case Ephemeral = 4325716;

    /** 0x00420155 */
    case ServerHashedPassword = 4325717;

    /** 0x00420156 */
    case OneTimePassword = 4325718;

    /** 0x00420157 */
    case HashedPassword = 4325719;

    /** 0x00420158 */
    case AdjustmentType = 4325720;

    /** 0x00420159 */
    case PKCS_11Interface = 4325721;

    /** 0x0042015A */
    case PKCS_11Function = 4325722;

    /** 0x0042015B */
    case PKCS_11InputParameters = 4325723;

    /** 0x0042015C */
    case PKCS_11OutputParameters = 4325724;

    /** 0x0042015D */
    case PKCS_11ReturnCode = 4325725;

    /** 0x0042015E */
    case ProtectionStorageMask = 4325726;

    /** 0x0042015F */
    case ProtectionStorageMasks = 4325727;

    /** 0x00420160 */
    case InteropFunction = 4325728;

    /** 0x00420161 */
    case InteropIdentifier = 4325729;

    /** 0x00420162 */
    case AdjustmentValue = 4325730;

    /** 0x00420163 */
    case CommonProtectionStorageMasks = 4325731;

    /** 0x00420164 */
    case PrivateProtectionStorageMasks = 4325732;

    /** 0x00420165 */
    case PublicProtectionStorageMasks = 4325733;

    public function valueToCanonicalName(self $value): string
    {
        return match($value) {
            self::ActivationDate => 'Activation Date',
            self::ApplicationData => 'Application Data',
            self::ApplicationNamespace => 'Application Namespace',
            self::ApplicationSpecificInformation => 'Application Specific Information',
            self::ArchiveDate => 'Archive Date',
            self::AsynchronousCorrelationValue => 'Asynchronous Correlation Value',
            self::AsynchronousIndicator => 'Asynchronous Indicator',
            self::Attribute => 'Attribute',
            self::AttributeIndex => 'Attribute Index',
            self::AttributeName => 'Attribute Name',
            self::AttributeValue => 'Attribute Value',
            self::Authentication => 'Authentication',
            self::BatchCount => 'Batch Count',
            self::BatchErrorContinuationOption => 'Batch Error Continuation Option',
            self::BatchItem => 'Batch Item',
            self::BatchOrderOption => 'Batch Order Option',
            self::BlockCipherMode => 'Block Cipher Mode',
            self::CancellationResult => 'Cancellation Result',
            self::Certificate => 'Certificate',
            self::CertificateIdentifier => 'Certificate Identifier',
            self::CertificateIssuer => 'Certificate Issuer',
            self::CertificateIssuerAlternativeName => 'Certificate Issuer Alternative Name',
            self::CertificateIssuerDistinguishedName => 'Certificate Issuer Distinguished Name',
            self::CertificateRequest => 'Certificate Request',
            self::CertificateRequestType => 'Certificate Request Type',
            self::CertificateSubject => 'Certificate Subject',
            self::CertificateSubjectAlternativeName => 'Certificate Subject Alternative Name',
            self::CertificateSubjectDistinguishedName => 'Certificate Subject Distinguished Name',
            self::CertificateType => 'Certificate Type',
            self::CertificateValue => 'Certificate Value',
            self::CommonTemplateAttribute => 'Common Template-Attribute',
            self::CompromiseDate => 'Compromise  Date',
            self::CompromiseOccurrenceDate => 'Compromise Occurrence Date',
            self::ContactInformation => 'Contact Information',
            self::Credential => 'Credential',
            self::CredentialType => 'Credential Type',
            self::CredentialValue => 'Credential Value',
            self::CriticalityIndicator => 'Criticality Indicator',
            self::CRTCoefficient => 'CRT Coefficient',
            self::CryptographicAlgorithm => 'Cryptographic Algorithm',
            self::CryptographicDomainParameters => 'Cryptographic Domain Parameters',
            self::CryptographicLength => 'Cryptographic Length',
            self::CryptographicParameters => 'Cryptographic Parameters',
            self::CryptographicUsageMask => 'Cryptographic Usage Mask',
            self::CustomAttribute => 'Custom Attribute',
            self::D => 'D',
            self::DeactivationDate => 'Deactivation Date',
            self::DerivationData => 'Derivation Data',
            self::DerivationMethod => 'Derivation Method',
            self::DerivationParameters => 'Derivation Parameters',
            self::DestroyDate => 'Destroy Date',
            self::Digest => 'Digest',
            self::DigestValue => 'Digest Value',
            self::EncryptionKeyInformation => 'Encryption Key Information',
            self::G => 'G',
            self::HashingAlgorithm => 'Hashing Algorithm',
            self::InitialDate => 'Initial Date',
            self::InitializationVector => 'Initialization Vector',
            self::Issuer => 'Issuer',
            self::IterationCount => 'Iteration Count',
            self::IVCounterNonce => 'IV/Counter/Nonce',
            self::J => 'J',
            self::Key => 'Key',
            self::KeyBlock => 'Key Block',
            self::KeyCompressionType => 'Key Compression Type',
            self::KeyFormatType => 'Key Format Type',
            self::KeyMaterial => 'Key Material',
            self::KeyPartIdentifier => 'Key Part Identifier',
            self::KeyValue => 'Key Value',
            self::KeyWrappingData => 'Key Wrapping Data',
            self::KeyWrappingSpecification => 'Key Wrapping Specification',
            self::LastChangeDate => 'Last Change Date',
            self::LeaseTime => 'Lease Time',
            self::Link => 'Link',
            self::LinkType => 'Link Type',
            self::LinkedObjectIdentifier => 'Linked Object Identifier',
            self::MACSignature => 'MAC/Signature',
            self::MACSignatureKeyInformation => 'MAC/Signature Key Information',
            self::MaximumItems => 'Maximum Items',
            self::MaximumResponseSize => 'Maximum Response Size',
            self::MessageExtension => 'Message Extension',
            self::Modulus => 'Modulus',
            self::Name => 'Name',
            self::NameType => 'Name Type',
            self::NameValue => 'Name Value',
            self::ObjectGroup => 'Object Group',
            self::ObjectType => 'Object Type',
            self::Offset => 'Offset',
            self::OpaqueDataType => 'Opaque Data Type',
            self::OpaqueDataValue => 'Opaque Data Value',
            self::OpaqueObject => 'Opaque Object',
            self::Operation => 'Operation',
            self::OperationPolicyName => 'Operation Policy Name',
            self::P => 'P',
            self::PaddingMethod => 'Padding Method',
            self::PrimeExponentP => 'Prime Exponent P',
            self::PrimeExponentQ => 'Prime Exponent Q',
            self::PrimeFieldSize => 'Prime Field Size',
            self::PrivateExponent => 'Private Exponent',
            self::PrivateKey => 'Private Key',
            self::PrivateKeyTemplateAttribute => 'Private Key Template-Attribute',
            self::PrivateKeyUniqueIdentifier => 'Private Key Unique Identifier',
            self::ProcessStartDate => 'Process Start Date',
            self::ProtectStopDate => 'Protect Stop Date',
            self::ProtocolVersion => 'Protocol Version',
            self::ProtocolVersionMajor => 'Protocol Version Major',
            self::ProtocolVersionMinor => 'Protocol Version Minor',
            self::PublicExponent => 'Public Exponent',
            self::PublicKey => 'Public Key',
            self::PublicKeyTemplateAttribute => 'Public Key Template-Attribute',
            self::PublicKeyUniqueIdentifier => 'Public Key Unique Identifier',
            self::PutFunction => 'Put Function',
            self::Q => 'Q',
            self::QString => 'Q String',
            self::Qlength => 'Qlength',
            self::QueryFunction => 'Query Function',
            self::RecommendedCurve => 'Recommended Curve',
            self::ReplacedUniqueIdentifier => 'Replaced Unique Identifier',
            self::RequestHeader => 'Request Header',
            self::RequestMessage => 'Request Message',
            self::RequestPayload => 'Request Payload',
            self::ResponseHeader => 'Response Header',
            self::ResponseMessage => 'Response Message',
            self::ResponsePayload => 'Response Payload',
            self::ResultMessage => 'Result Message',
            self::ResultReason => 'Result Reason',
            self::ResultStatus => 'Result Status',
            self::RevocationMessage => 'Revocation Message',
            self::RevocationReason => 'Revocation Reason',
            self::RevocationReasonCode => 'Revocation Reason Code',
            self::KeyRoleType => 'Key Role Type',
            self::Salt => 'Salt',
            self::SecretData => 'Secret Data',
            self::SecretDataType => 'Secret Data Type',
            self::SerialNumber => 'Serial Number',
            self::ServerInformation => 'Server Information',
            self::SplitKey => 'Split Key',
            self::SplitKeyMethod => 'Split Key Method',
            self::SplitKeyParts => 'Split Key Parts',
            self::SplitKeyThreshold => 'Split Key Threshold',
            self::State => 'State',
            self::StorageStatusMask => 'Storage Status Mask',
            self::SymmetricKey => 'Symmetric Key',
            self::Template => 'Template',
            self::TemplateAttribute => 'Template-Attribute',
            self::TimeStamp => 'Time Stamp',
            self::UniqueBatchItemID => 'Unique Batch Item ID',
            self::UniqueIdentifier => 'Unique Identifier',
            self::UsageLimits => 'Usage Limits',
            self::UsageLimitsCount => 'Usage Limits Count',
            self::UsageLimitsTotal => 'Usage Limits Total',
            self::UsageLimitsUnit => 'Usage Limits Unit',
            self::Username => 'Username',
            self::ValidityDate => 'Validity Date',
            self::ValidityIndicator => 'Validity Indicator',
            self::VendorExtension => 'Vendor Extension',
            self::VendorIdentification => 'Vendor Identification',
            self::WrappingMethod => 'Wrapping Method',
            self::X => 'X',
            self::Y => 'Y',
            self::Password => 'Password',
            self::DeviceIdentifier => 'Device Identifier',
            self::EncodingOption => 'Encoding Option',
            self::ExtensionInformation => 'Extension Information',
            self::ExtensionName => 'Extension Name',
            self::ExtensionTag => 'Extension Tag',
            self::ExtensionType => 'Extension Type',
            self::Fresh => 'Fresh',
            self::MachineIdentifier => 'Machine Identifier',
            self::MediaIdentifier => 'Media Identifier',
            self::NetworkIdentifier => 'Network Identifier',
            self::ObjectGroupMember => 'Object Group Member',
            self::CertificateLength => 'Certificate Length',
            self::DigitalSignatureAlgorithm => 'Digital Signature Algorithm',
            self::CertificateSerialNumber => 'Certificate Serial Number',
            self::DeviceSerialNumber => 'Device Serial Number',
            self::IssuerAlternativeName => 'Issuer Alternative Name',
            self::IssuerDistinguishedName => 'Issuer Distinguished Name',
            self::SubjectAlternativeName => 'Subject Alternative Name',
            self::SubjectDistinguishedName => 'Subject Distinguished Name',
            self::X_509CertificateIdentifier => 'X.509 Certificate Identifier',
            self::X_509CertificateIssuer => 'X.509 Certificate Issuer',
            self::X_509CertificateSubject => 'X.509 Certificate Subject',
            self::KeyValueLocation => 'Key Value Location',
            self::KeyValueLocationValue => 'Key Value Location Value',
            self::KeyValueLocationType => 'Key Value Location Type',
            self::KeyValuePresent => 'Key Value Present',
            self::OriginalCreationDate => 'Original Creation Date',
            self::PGPKey => 'PGP Key',
            self::PGPKeyVersion => 'PGP Key Version',
            self::AlternativeName => 'Alternative Name',
            self::AlternativeNameValue => 'Alternative Name Value',
            self::AlternativeNameType => 'Alternative Name Type',
            self::Data => 'Data',
            self::SignatureData => 'Signature Data',
            self::DataLength => 'Data Length',
            self::RandomIV => 'Random IV',
            self::MACData => 'MAC Data',
            self::AttestationType => 'Attestation Type',
            self::Nonce => 'Nonce',
            self::NonceID => 'Nonce ID',
            self::NonceValue => 'Nonce Value',
            self::AttestationMeasurement => 'Attestation Measurement',
            self::AttestationAssertion => 'Attestation Assertion',
            self::IVLength => 'IV Length',
            self::TagLength => 'Tag Length',
            self::FixedFieldLength => 'Fixed Field Length',
            self::CounterLength => 'Counter Length',
            self::InitialCounterValue => 'Initial Counter Value',
            self::InvocationFieldLength => 'Invocation Field Length',
            self::AttestationCapableIndicator => 'Attestation Capable Indicator',
            self::OffsetItems => 'Offset Items',
            self::LocatedItems => 'Located Items',
            self::CorrelationValue => 'Correlation Value',
            self::InitIndicator => 'Init Indicator',
            self::FinalIndicator => 'Final Indicator',
            self::RNGParameters => 'RNG Parameters',
            self::RNGAlgorithm => 'RNG Algorithm',
            self::DRBGAlgorithm => 'DRBG Algorithm',
            self::FIPS186Variation => 'FIPS186 Variation',
            self::PredictionResistance => 'Prediction Resistance',
            self::RandomNumberGenerator => 'Random Number Generator',
            self::ValidationInformation => 'Validation Information',
            self::ValidationAuthorityType => 'Validation Authority Type',
            self::ValidationAuthorityCountry => 'Validation Authority Country',
            self::ValidationAuthorityURI => 'Validation Authority URI',
            self::ValidationVersionMajor => 'Validation Version Major',
            self::ValidationVersionMinor => 'Validation Version Minor',
            self::ValidationType => 'Validation Type',
            self::ValidationLevel => 'Validation Level',
            self::ValidationCertificateIdentifier => 'Validation Certificate Identifier',
            self::ValidationCertificateURI => 'Validation Certificate URI',
            self::ValidationVendorURI => 'Validation Vendor URI',
            self::ValidationProfile => 'Validation Profile',
            self::ProfileInformation => 'Profile Information',
            self::ProfileName => 'Profile Name',
            self::ServerURI => 'Server URI',
            self::ServerPort => 'Server Port',
            self::StreamingCapability => 'Streaming Capability',
            self::AsynchronousCapability => 'Asynchronous Capability',
            self::AttestationCapability => 'Attestation Capability',
            self::UnwrapMode => 'Unwrap Mode',
            self::DestroyAction => 'Destroy Action',
            self::ShreddingAlgorithm => 'Shredding Algorithm',
            self::RNGMode => 'RNG Mode',
            self::ClientRegistrationMethod => 'Client Registration Method',
            self::CapabilityInformation => 'Capability Information',
            self::KeyWrapType => 'Key Wrap Type',
            self::BatchUndoCapability => 'Batch Undo Capability',
            self::BatchContinueCapability => 'Batch Continue Capability',
            self::PKCS_12FriendlyName => 'PKCS#12 Friendly Name',
            self::Description => 'Description',
            self::Comment => 'Comment',
            self::AuthenticatedEncryptionAdditionalData => 'Authenticated Encryption Additional Data',
            self::AuthenticatedEncryptionTag => 'Authenticated Encryption Tag',
            self::SaltLength => 'Salt Length',
            self::MaskGenerator => 'Mask Generator',
            self::MaskGeneratorHashingAlgorithm => 'Mask Generator Hashing Algorithm',
            self::PSource => 'P Source',
            self::TrailerField => 'Trailer Field',
            self::ClientCorrelationValue => 'Client Correlation Value',
            self::ServerCorrelationValue => 'Server Correlation Value',
            self::DigestedData => 'Digested Data',
            self::CertificateSubjectCN => 'Certificate Subject CN',
            self::CertificateSubjectO => 'Certificate Subject O',
            self::CertificateSubjectOU => 'Certificate Subject OU',
            self::CertificateSubjectEmail => 'Certificate Subject Email',
            self::CertificateSubjectC => 'Certificate Subject C',
            self::CertificateSubjectST => 'Certificate Subject ST',
            self::CertificateSubjectL => 'Certificate Subject L',
            self::CertificateSubjectUID => 'Certificate Subject UID',
            self::CertificateSubjectSerialNumber => 'Certificate Subject Serial Number',
            self::CertificateSubjectTitle => 'Certificate Subject Title',
            self::CertificateSubjectDC => 'Certificate Subject DC',
            self::CertificateSubjectDNQualifier => 'Certificate Subject DN Qualifier',
            self::CertificateIssuerCN => 'Certificate Issuer CN',
            self::CertificateIssuerO => 'Certificate Issuer O',
            self::CertificateIssuerOU => 'Certificate Issuer OU',
            self::CertificateIssuerEmail => 'Certificate Issuer Email',
            self::CertificateIssuerC => 'Certificate Issuer C',
            self::CertificateIssuerST => 'Certificate Issuer ST',
            self::CertificateIssuerL => 'Certificate Issuer L',
            self::CertificateIssuerUID => 'Certificate Issuer UID',
            self::CertificateIssuerSerialNumber => 'Certificate Issuer Serial Number',
            self::CertificateIssuerTitle => 'Certificate Issuer Title',
            self::CertificateIssuerDC => 'Certificate Issuer DC',
            self::CertificateIssuerDNQualifier => 'Certificate Issuer DN Qualifier',
            self::Sensitive => 'Sensitive',
            self::AlwaysSensitive => 'Always Sensitive',
            self::Extractable => 'Extractable',
            self::NeverExtractable => 'Never Extractable',
            self::ReplaceExisting => 'Replace Existing',
            self::Attributes => 'Attributes',
            self::CommonAttributes => 'Common Attributes',
            self::PrivateKeyAttributes => 'Private Key Attributes',
            self::PublicKeyAttributes => 'Public Key Attributes',
            self::ExtensionEnumeration => 'Extension Enumeration',
            self::ExtensionAttribute => 'Extension Attribute',
            self::ExtensionParentStructureTag => 'Extension Parent Structure Tag',
            self::ExtensionDescription => 'Extension Description',
            self::ServerName => 'Server Name',
            self::ServerSerialNumber => 'Server Serial Number',
            self::ServerVersion => 'Server Version',
            self::ServerLoad => 'Server Load',
            self::ProductName => 'Product Name',
            self::BuildLevel => 'Build Level',
            self::BuildDate => 'Build Date',
            self::ClusterInfo => 'Cluster Info',
            self::AlternateFailoverEndpoints => 'Alternate Failover Endpoints',
            self::ShortUniqueIdentifier => 'Short Unique Identifier',
            self::Reserved => 'Reserved',
            self::Tag => 'Tag',
            self::CertificateRequestUniqueIdentifier => 'Certificate Request Unique Identifier',
            self::NISTKeyType => 'NIST Key Type',
            self::AttributeReference => 'Attribute Reference',
            self::CurrentAttribute => 'Current Attribute',
            self::NewAttribute => 'New Attribute',
            self::CertificateRequestValue => 'Certificate Request Value',
            self::LogMessage => 'Log Message',
            self::ProfileVersion => 'Profile Version',
            self::ProfileVersionMajor => 'Profile Version Major',
            self::ProfileVersionMinor => 'Profile Version Minor',
            self::ProtectionLevel => 'Protection Level',
            self::ProtectionPeriod => 'Protection Period',
            self::QuantumSafe => 'Quantum Safe',
            self::QuantumSafeCapability => 'Quantum Safe Capability',
            self::Ticket => 'Ticket',
            self::TicketType => 'Ticket Type',
            self::TicketValue => 'Ticket Value',
            self::RequestCount => 'Request Count',
            self::Rights => 'Rights',
            self::Objects => 'Objects',
            self::Operations => 'Operations',
            self::Right => 'Right',
            self::EndpointRole => 'Endpoint Role',
            self::DefaultsInformation => 'Defaults Information',
            self::ObjectDefaults => 'Object Defaults',
            self::Ephemeral => 'Ephemeral',
            self::ServerHashedPassword => 'Server Hashed Password',
            self::OneTimePassword => 'One Time Password',
            self::HashedPassword => 'Hashed Password',
            self::AdjustmentType => 'Adjustment Type',
            self::PKCS_11Interface => 'PKCS#11 Interface',
            self::PKCS_11Function => 'PKCS#11 Function',
            self::PKCS_11InputParameters => 'PKCS#11 Input Parameters',
            self::PKCS_11OutputParameters => 'PKCS#11 Output Parameters',
            self::PKCS_11ReturnCode => 'PKCS#11 Return Code',
            self::ProtectionStorageMask => 'Protection Storage Mask',
            self::ProtectionStorageMasks => 'Protection Storage Masks',
            self::InteropFunction => 'Interop Function',
            self::InteropIdentifier => 'Interop Identifier',
            self::AdjustmentValue => 'Adjustment Value',
            self::CommonProtectionStorageMasks => 'Common Protection Storage Masks',
            self::PrivateProtectionStorageMasks => 'Private Protection Storage Masks',
            self::PublicProtectionStorageMasks => 'Public Protection Storage Masks',
        };
    }

    public function canonicalName(): string
    {
        return self::valueToCanonicalName($this);
    }

    private static function normalizeName(string $name): string
    {
        return preg_replace(
            '/^([\d]+)(.*)/',
            '$2$1',
            strtr(
                ucwords($name),
                ["." => "_", "#" => "_", " " => "", "/" => "", "-" => "", "^" => "_", "(" => "", ")" => ""]
            )
        );
    }

    public static function fromName(string $name): Tag
    {
        $normalizedName = self::normalizeName($name);

        return constant('self::'.$normalizedName);
    }

    public static function hasName(string $name): bool
    {
        $normalizedName = self::normalizeName($name);

        return defined('self::' . $normalizedName);
    }
}
