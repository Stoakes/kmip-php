<?php

/**
 * DO NOT EDIT. This file is auto-generated by stoakes/kmip-php code generator
 */

declare(strict_types=1);

namespace Stoakes\Kmip\Enum;

enum ProfileName: int
{
    /** 0x00000001 */
    case BaselineServerBasicKMIPV1_2 = 1;

    /** 0x00000002 */
    case BaselineServerTLSV1_2KMIPV1_2 = 2;

    /** 0x00000003 */
    case BaselineClientBasicKMIPV1_2 = 3;

    /** 0x00000004 */
    case BaselineClientTLSV1_2KMIPV1_2 = 4;

    /** 0x00000005 */
    case CompleteServerBasicKMIPV1_2 = 5;

    /** 0x00000006 */
    case CompleteServerTLSV1_2KMIPV1_2 = 6;

    /** 0x00000007 */
    case TapeLibraryClientKMIPV1_0 = 7;

    /** 0x00000008 */
    case TapeLibraryClientKMIPV1_1 = 8;

    /** 0x00000009 */
    case TapeLibraryClientKMIPV1_2 = 9;

    /** 0x0000000A */
    case TapeLibraryServerKMIPV1_0 = 10;

    /** 0x0000000B */
    case TapeLibraryServerKMIPV1_1 = 11;

    /** 0x0000000C */
    case TapeLibraryServerKMIPV1_2 = 12;

    /** 0x0000000D */
    case SymmetricKeyLifecycleClientKMIPV1_0 = 13;

    /** 0x0000000E */
    case SymmetricKeyLifecycleClientKMIPV1_1 = 14;

    /** 0x0000000F */
    case SymmetricKeyLifecycleClientKMIPV1_2 = 15;

    /** 0x00000010 */
    case SymmetricKeyLifecycleServerKMIPV1_0 = 16;

    /** 0x00000011 */
    case SymmetricKeyLifecycleServerKMIPV1_1 = 17;

    /** 0x00000012 */
    case SymmetricKeyLifecycleServerKMIPV1_2 = 18;

    /** 0x00000013 */
    case AsymmetricKeyLifecycleClientKMIPV1_0 = 19;

    /** 0x00000014 */
    case AsymmetricKeyLifecycleClientKMIPV1_1 = 20;

    /** 0x00000015 */
    case AsymmetricKeyLifecycleClientKMIPV1_2 = 21;

    /** 0x00000016 */
    case AsymmetricKeyLifecycleServerKMIPV1_0 = 22;

    /** 0x00000017 */
    case AsymmetricKeyLifecycleServerKMIPV1_1 = 23;

    /** 0x00000018 */
    case AsymmetricKeyLifecycleServerKMIPV1_2 = 24;

    /** 0x00000019 */
    case BasicCryptographicClientKMIPV1_2 = 25;

    /** 0x0000001A */
    case BasicCryptographicServerKMIPV1_2 = 26;

    /** 0x0000001B */
    case AdvancedCryptographicClientKMIPV1_2 = 27;

    /** 0x0000001C */
    case AdvancedCryptographicServerKMIPV1_2 = 28;

    /** 0x0000001D */
    case RNGCryptographicClientKMIPV1_2 = 29;

    /** 0x0000001E */
    case RNGCryptographicServerKMIPV1_2 = 30;

    /** 0x0000001F */
    case BasicSymmetricKeyFoundryClientKMIPV1_0 = 31;

    /** 0x00000020 */
    case IntermediateSymmetricKeyFoundryClientKMIPV1_0 = 32;

    /** 0x00000021 */
    case AdvancedSymmetricKeyFoundryClientKMIPV1_0 = 33;

    /** 0x00000022 */
    case BasicSymmetricKeyFoundryClientKMIPV1_1 = 34;

    /** 0x00000023 */
    case IntermediateSymmetricKeyFoundryClientKMIPV1_1 = 35;

    /** 0x00000024 */
    case AdvancedSymmetricKeyFoundryClientKMIPV1_1 = 36;

    /** 0x00000025 */
    case BasicSymmetricKeyFoundryClientKMIPV1_2 = 37;

    /** 0x00000026 */
    case IntermediateSymmetricKeyFoundryClientKMIPV1_2 = 38;

    /** 0x00000027 */
    case AdvancedSymmetricKeyFoundryClientKMIPV1_2 = 39;

    /** 0x00000028 */
    case SymmetricKeyFoundryServerKMIPV1_0 = 40;

    /** 0x00000029 */
    case SymmetricKeyFoundryServerKMIPV1_1 = 41;

    /** 0x0000002A */
    case SymmetricKeyFoundryServerKMIPV1_2 = 42;

    /** 0x0000002B */
    case OpaqueManagedObjectStoreClientKMIPV1_0 = 43;

    /** 0x0000002C */
    case OpaqueManagedObjectStoreClientKMIPV1_1 = 44;

    /** 0x0000002D */
    case OpaqueManagedObjectStoreClientKMIPV1_2 = 45;

    /** 0x0000002E */
    case OpaqueManagedObjectStoreServerKMIPV1_0 = 46;

    /** 0x0000002F */
    case OpaqueManagedObjectStoreServerKMIPV1_1 = 47;

    /** 0x00000030 */
    case OpaqueManagedObjectStoreServerKMIPV1_2 = 48;

    /** 0x00000031 */
    case SuiteBMinLOS_128ClientKMIPV1_0 = 49;

    /** 0x00000032 */
    case SuiteBMinLOS_128ClientKMIPV1_1 = 50;

    /** 0x00000033 */
    case SuiteBMinLOS_128ClientKMIPV1_2 = 51;

    /** 0x00000034 */
    case SuiteBMinLOS_128ServerKMIPV1_0 = 52;

    /** 0x00000035 */
    case SuiteBMinLOS_128ServerKMIPV1_1 = 53;

    /** 0x00000036 */
    case SuiteBMinLOS_128ServerKMIPV1_2 = 54;

    /** 0x00000037 */
    case SuiteBMinLOS_192ClientKMIPV1_0 = 55;

    /** 0x00000038 */
    case SuiteBMinLOS_192ClientKMIPV1_1 = 56;

    /** 0x00000039 */
    case SuiteBMinLOS_192ClientKMIPV1_2 = 57;

    /** 0x0000003A */
    case SuiteBMinLOS_192ServerKMIPV1_0 = 58;

    /** 0x0000003B */
    case SuiteBMinLOS_192ServerKMIPV1_1 = 59;

    /** 0x0000003C */
    case SuiteBMinLOS_192ServerKMIPV1_2 = 60;

    /** 0x0000003D */
    case StorageArrayWithSelfEncryptingDriveClientKMIPV1_0 = 61;

    /** 0x0000003E */
    case StorageArrayWithSelfEncryptingDriveClientKMIPV1_1 = 62;

    /** 0x0000003F */
    case StorageArrayWithSelfEncryptingDriveClientKMIPV1_2 = 63;

    /** 0x00000040 */
    case StorageArrayWithSelfEncryptingDriveServerKMIPV1_0 = 64;

    /** 0x00000041 */
    case StorageArrayWithSelfEncryptingDriveServerKMIPV1_1 = 65;

    /** 0x00000042 */
    case StorageArrayWithSelfEncryptingDriveServerKMIPV1_2 = 66;

    /** 0x00000043 */
    case HTTPSClientKMIPV1_0 = 67;

    /** 0x00000044 */
    case HTTPSClientKMIPV1_1 = 68;

    /** 0x00000045 */
    case HTTPSClientKMIPV1_2 = 69;

    /** 0x00000046 */
    case HTTPSServerKMIPV1_0 = 70;

    /** 0x00000047 */
    case HTTPSServerKMIPV1_1 = 71;

    /** 0x00000048 */
    case HTTPSServerKMIPV1_2 = 72;

    /** 0x00000049 */
    case JSONClientKMIPV1_0 = 73;

    /** 0x0000004A */
    case JSONClientKMIPV1_1 = 74;

    /** 0x0000004B */
    case JSONClientKMIPV1_2 = 75;

    /** 0x0000004C */
    case JSONServerKMIPV1_0 = 76;

    /** 0x0000004D */
    case JSONServerKMIPV1_1 = 77;

    /** 0x0000004E */
    case JSONServerKMIPV1_2 = 78;

    /** 0x0000004F */
    case XMLClientKMIPV1_0 = 79;

    /** 0x00000050 */
    case XMLClientKMIPV1_1 = 80;

    /** 0x00000051 */
    case XMLClientKMIPV1_2 = 81;

    /** 0x00000052 */
    case XMLServerKMIPV1_0 = 82;

    /** 0x00000053 */
    case XMLServerKMIPV1_1 = 83;

    /** 0x00000054 */
    case XMLServerKMIPV1_2 = 84;

    /** 0x00000055 */
    case BaselineServerBasicKMIPV1_3 = 85;

    /** 0x00000056 */
    case BaselineServerTLSV1_2KMIPV1_3 = 86;

    /** 0x00000057 */
    case BaselineClientBasicKMIPV1_3 = 87;

    /** 0x00000058 */
    case BaselineClientTLSV1_2KMIPV1_3 = 88;

    /** 0x00000059 */
    case CompleteServerBasicKMIPV1_3 = 89;

    /** 0x0000005A */
    case CompleteServerTLSV1_2KMIPV1_3 = 90;

    /** 0x0000005B */
    case TapeLibraryClientKMIPV1_3 = 91;

    /** 0x0000005C */
    case TapeLibraryServerKMIPV1_3 = 92;

    /** 0x0000005D */
    case SymmetricKeyLifecycleClientKMIPV1_3 = 93;

    /** 0x0000005E */
    case SymmetricKeyLifecycleServerKMIPV1_3 = 94;

    /** 0x0000005F */
    case AsymmetricKeyLifecycleClientKMIPV1_3 = 95;

    /** 0x00000060 */
    case AsymmetricKeyLifecycleServerKMIPV1_3 = 96;

    /** 0x00000061 */
    case BasicCryptographicClientKMIPV1_3 = 97;

    /** 0x00000062 */
    case BasicCryptographicServerKMIPV1_3 = 98;

    /** 0x00000063 */
    case AdvancedCryptographicClientKMIPV1_3 = 99;

    /** 0x00000064 */
    case AdvancedCryptographicServerKMIPV1_3 = 100;

    /** 0x00000065 */
    case RNGCryptographicClientKMIPV1_3 = 101;

    /** 0x00000066 */
    case RNGCryptographicServerKMIPV1_3 = 102;

    /** 0x00000067 */
    case BasicSymmetricKeyFoundryClientKMIPV1_3 = 103;

    /** 0x00000068 */
    case IntermediateSymmetricKeyFoundryClientKMIPV1_3 = 104;

    /** 0x00000069 */
    case AdvancedSymmetricKeyFoundryClientKMIPV1_3 = 105;

    /** 0x0000006A */
    case SymmetricKeyFoundryServerKMIPV1_3 = 106;

    /** 0x0000006B */
    case OpaqueManagedObjectStoreClientKMIPV1_3 = 107;

    /** 0x0000006C */
    case OpaqueManagedObjectStoreServerKMIPV1_3 = 108;

    /** 0x0000006D */
    case SuiteBMinLOS_128ClientKMIPV1_3 = 109;

    /** 0x0000006E */
    case SuiteBMinLOS_128ServerKMIPV1_3 = 110;

    /** 0x0000006F */
    case SuiteBMinLOS_192ClientKMIPV1_3 = 111;

    /** 0x00000070 */
    case SuiteBMinLOS_192ServerKMIPV1_3 = 112;

    /** 0x00000071 */
    case StorageArrayWithSelfEncryptingDriveClientKMIPV1_3 = 113;

    /** 0x00000072 */
    case StorageArrayWithSelfEncryptingDriveServerKMIPV1_3 = 114;

    /** 0x00000073 */
    case HTTPSClientKMIPV1_3 = 115;

    /** 0x00000074 */
    case HTTPSServerKMIPV1_3 = 116;

    /** 0x00000075 */
    case JSONClientKMIPV1_3 = 117;

    /** 0x00000076 */
    case JSONServerKMIPV1_3 = 118;

    /** 0x00000077 */
    case XMLClientKMIPV1_3 = 119;

    /** 0x00000078 */
    case XMLServerKMIPV1_3 = 120;

    /** 0x00000079 */
    case BaselineServerBasicKMIPV1_4 = 121;

    /** 0x0000007A */
    case BaselineServerTLSV1_2KMIPV1_4 = 122;

    /** 0x0000007B */
    case BaselineClientBasicKMIPV1_4 = 123;

    /** 0x0000007C */
    case BaselineClientTLSV1_2KMIPV1_4 = 124;

    /** 0x0000007D */
    case CompleteServerBasicKMIPV1_4 = 125;

    /** 0x0000007E */
    case CompleteServerTLSV1_2KMIPV1_4 = 126;

    /** 0x0000007F */
    case TapeLibraryClientKMIPV1_4 = 127;

    /** 0x00000080 */
    case TapeLibraryServerKMIPV1_4 = 128;

    /** 0x00000081 */
    case SymmetricKeyLifecycleClientKMIPV1_4 = 129;

    /** 0x00000082 */
    case SymmetricKeyLifecycleServerKMIPV1_4 = 130;

    /** 0x00000083 */
    case AsymmetricKeyLifecycleClientKMIPV1_4 = 131;

    /** 0x00000084 */
    case AsymmetricKeyLifecycleServerKMIPV1_4 = 132;

    /** 0x00000085 */
    case BasicCryptographicClientKMIPV1_4 = 133;

    /** 0x00000086 */
    case BasicCryptographicServerKMIPV1_4 = 134;

    /** 0x00000087 */
    case AdvancedCryptographicClientKMIPV1_4 = 135;

    /** 0x00000088 */
    case AdvancedCryptographicServerKMIPV1_4 = 136;

    /** 0x00000089 */
    case RNGCryptographicClientKMIPV1_4 = 137;

    /** 0x0000008A */
    case RNGCryptographicServerKMIPV1_4 = 138;

    /** 0x0000008B */
    case BasicSymmetricKeyFoundryClientKMIPV1_4 = 139;

    /** 0x0000008C */
    case IntermediateSymmetricKeyFoundryClientKMIPV1_4 = 140;

    /** 0x0000008D */
    case AdvancedSymmetricKeyFoundryClientKMIPV1_4 = 141;

    /** 0x0000008E */
    case SymmetricKeyFoundryServerKMIPV1_4 = 142;

    /** 0x0000008F */
    case OpaqueManagedObjectStoreClientKMIPV1_4 = 143;

    /** 0x00000090 */
    case OpaqueManagedObjectStoreServerKMIPV1_4 = 144;

    /** 0x00000091 */
    case SuiteBMinLOS_128ClientKMIPV1_4 = 145;

    /** 0x00000092 */
    case SuiteBMinLOS_128ServerKMIPV1_4 = 146;

    /** 0x00000093 */
    case SuiteBMinLOS_192ClientKMIPV1_4 = 147;

    /** 0x00000094 */
    case SuiteBMinLOS_192ServerKMIPV1_4 = 148;

    /** 0x00000095 */
    case StorageArrayWithSelfEncryptingDriveClientKMIPV1_4 = 149;

    /** 0x00000096 */
    case StorageArrayWithSelfEncryptingDriveServerKMIPV1_4 = 150;

    /** 0x00000097 */
    case HTTPSClientKMIPV1_4 = 151;

    /** 0x00000098 */
    case HTTPSServerKMIPV1_4 = 152;

    /** 0x00000099 */
    case JSONClientKMIPV1_4 = 153;

    /** 0x0000009A */
    case JSONServerKMIPV1_4 = 154;

    /** 0x0000009B */
    case XMLClientKMIPV1_4 = 155;

    /** 0x0000009C */
    case XMLServerKMIPV1_4 = 156;

    /** 0x00000104 */
    case CompleteServerBasic = 260;

    /** 0x00000105 */
    case CompleteServerTLSV1_2 = 261;

    /** 0x00000106 */
    case TapeLibraryClient = 262;

    /** 0x00000107 */
    case TapeLibraryServer = 263;

    /** 0x00000108 */
    case SymmetricKeyLifecycleClient = 264;

    /** 0x00000109 */
    case SymmetricKeyLifecycleServer = 265;

    /** 0x0000010A */
    case AsymmetricKeyLifecycleClient = 266;

    /** 0x0000010B */
    case AsymmetricKeyLifecycleServer = 267;

    /** 0x0000010C */
    case BasicCryptographicClient = 268;

    /** 0x0000010D */
    case BasicCryptographicServer = 269;

    /** 0x0000010E */
    case AdvancedCryptographicClient = 270;

    /** 0x0000010F */
    case AdvancedCryptographicServer = 271;

    /** 0x00000110 */
    case RNGCryptographicClient = 272;

    /** 0x00000111 */
    case RNGCryptographicServer = 273;

    /** 0x00000112 */
    case BasicSymmetricKeyFoundryClient = 274;

    /** 0x00000113 */
    case IntermediateSymmetricKeyFoundryClient = 275;

    /** 0x00000114 */
    case AdvancedSymmetricKeyFoundryClient = 276;

    /** 0x00000115 */
    case SymmetricKeyFoundryServer = 277;

    /** 0x00000116 */
    case OpaqueManagedObjectStoreClient = 278;

    /** 0x00000117 */
    case OpaqueManagedObjectStoreServer = 279;

    /** 0x00000118 */
    case SuiteBMinLOS_128Client = 280;

    /** 0x00000119 */
    case SuiteBMinLOS_128Server = 281;

    /** 0x0000011A */
    case SuiteBMinLOS_192Client = 282;

    /** 0x0000011B */
    case SuiteBMinLOS_192Server = 283;

    /** 0x0000011C */
    case StorageArrayWithSelfEncryptingDriveClient = 284;

    /** 0x0000011D */
    case StorageArrayWithSelfEncryptingDriveServer = 285;

    /** 0x0000011E */
    case HTTPSClient = 286;

    /** 0x0000011F */
    case HTTPSServer = 287;

    /** 0x00000120 */
    case JSONClient = 288;

    /** 0x00000121 */
    case JSONServer = 289;

    /** 0x00000122 */
    case XMLClient = 290;

    /** 0x00000123 */
    case XMLServer = 291;

    /** 0x00000124 */
    case AESXTSClient = 292;

    /** 0x00000125 */
    case AESXTSServer = 293;

    /** 0x00000126 */
    case QuantumSafeClient = 294;

    /** 0x00000127 */
    case QuantumSafeServer = 295;

    /** 0x00000128 */
    case PKCS_11Client = 296;

    /** 0x00000129 */
    case PKCS_11Server = 297;

    /** 0x0000012A */
    case BaselineClient = 298;

    /** 0x0000012B */
    case BaselineServer = 299;

    /** 0x0000012C */
    case CompleteServer = 300;

    public function valueToCanonicalName(self $value): string
    {
        return match($value) {
            self::BaselineServerBasicKMIPV1_2 => 'Baseline Server Basic KMIP v1.2',
            self::BaselineServerTLSV1_2KMIPV1_2 => 'Baseline Server TLS v1.2 KMIP v1.2',
            self::BaselineClientBasicKMIPV1_2 => 'Baseline Client Basic KMIP v1.2',
            self::BaselineClientTLSV1_2KMIPV1_2 => 'Baseline Client TLS v1.2 KMIP v1.2',
            self::CompleteServerBasicKMIPV1_2 => 'Complete Server Basic KMIP v1.2',
            self::CompleteServerTLSV1_2KMIPV1_2 => 'Complete Server TLS v1.2 KMIP v1.2',
            self::TapeLibraryClientKMIPV1_0 => 'Tape Library Client KMIP v1.0',
            self::TapeLibraryClientKMIPV1_1 => 'Tape Library Client KMIP v1.1',
            self::TapeLibraryClientKMIPV1_2 => 'Tape Library Client KMIP v1.2',
            self::TapeLibraryServerKMIPV1_0 => 'Tape Library Server KMIP v1.0',
            self::TapeLibraryServerKMIPV1_1 => 'Tape Library Server KMIP v1.1',
            self::TapeLibraryServerKMIPV1_2 => 'Tape Library Server KMIP v1.2',
            self::SymmetricKeyLifecycleClientKMIPV1_0 => 'Symmetric Key Lifecycle Client KMIP v1.0',
            self::SymmetricKeyLifecycleClientKMIPV1_1 => 'Symmetric Key Lifecycle Client KMIP v1.1',
            self::SymmetricKeyLifecycleClientKMIPV1_2 => 'Symmetric Key Lifecycle Client KMIP v1.2',
            self::SymmetricKeyLifecycleServerKMIPV1_0 => 'Symmetric Key Lifecycle Server KMIP v1.0',
            self::SymmetricKeyLifecycleServerKMIPV1_1 => 'Symmetric Key Lifecycle Server KMIP v1.1',
            self::SymmetricKeyLifecycleServerKMIPV1_2 => 'Symmetric Key Lifecycle Server KMIP v1.2',
            self::AsymmetricKeyLifecycleClientKMIPV1_0 => 'Asymmetric Key Lifecycle Client KMIP v1.0',
            self::AsymmetricKeyLifecycleClientKMIPV1_1 => 'Asymmetric Key Lifecycle Client KMIP v1.1',
            self::AsymmetricKeyLifecycleClientKMIPV1_2 => 'Asymmetric Key Lifecycle Client KMIP v1.2',
            self::AsymmetricKeyLifecycleServerKMIPV1_0 => 'Asymmetric Key Lifecycle Server KMIP v1.0',
            self::AsymmetricKeyLifecycleServerKMIPV1_1 => 'Asymmetric Key Lifecycle Server KMIP v1.1',
            self::AsymmetricKeyLifecycleServerKMIPV1_2 => 'Asymmetric Key Lifecycle Server KMIP v1.2',
            self::BasicCryptographicClientKMIPV1_2 => 'Basic Cryptographic Client KMIP v1.2',
            self::BasicCryptographicServerKMIPV1_2 => 'Basic Cryptographic Server KMIP v1.2',
            self::AdvancedCryptographicClientKMIPV1_2 => 'Advanced Cryptographic Client KMIP v1.2',
            self::AdvancedCryptographicServerKMIPV1_2 => 'Advanced Cryptographic Server KMIP v1.2',
            self::RNGCryptographicClientKMIPV1_2 => 'RNG Cryptographic Client KMIP v1.2',
            self::RNGCryptographicServerKMIPV1_2 => 'RNG Cryptographic Server KMIP v1.2',
            self::BasicSymmetricKeyFoundryClientKMIPV1_0 => 'Basic Symmetric Key Foundry Client KMIP v1.0',
            self::IntermediateSymmetricKeyFoundryClientKMIPV1_0 => 'Intermediate Symmetric Key Foundry Client KMIP v1.0',
            self::AdvancedSymmetricKeyFoundryClientKMIPV1_0 => 'Advanced Symmetric Key Foundry Client KMIP v1.0',
            self::BasicSymmetricKeyFoundryClientKMIPV1_1 => 'Basic Symmetric Key Foundry Client KMIP v1.1',
            self::IntermediateSymmetricKeyFoundryClientKMIPV1_1 => 'Intermediate Symmetric Key Foundry Client KMIP v1.1',
            self::AdvancedSymmetricKeyFoundryClientKMIPV1_1 => 'Advanced Symmetric Key Foundry Client KMIP v1.1',
            self::BasicSymmetricKeyFoundryClientKMIPV1_2 => 'Basic Symmetric Key Foundry Client KMIP v1.2',
            self::IntermediateSymmetricKeyFoundryClientKMIPV1_2 => 'Intermediate Symmetric Key Foundry Client KMIP v1.2',
            self::AdvancedSymmetricKeyFoundryClientKMIPV1_2 => 'Advanced Symmetric Key Foundry Client KMIP v1.2',
            self::SymmetricKeyFoundryServerKMIPV1_0 => 'Symmetric Key Foundry Server KMIP v1.0',
            self::SymmetricKeyFoundryServerKMIPV1_1 => 'Symmetric Key Foundry Server KMIP v1.1',
            self::SymmetricKeyFoundryServerKMIPV1_2 => 'Symmetric Key Foundry Server KMIP v1.2',
            self::OpaqueManagedObjectStoreClientKMIPV1_0 => 'Opaque Managed Object Store Client KMIP v1.0',
            self::OpaqueManagedObjectStoreClientKMIPV1_1 => 'Opaque Managed Object Store Client KMIP v1.1',
            self::OpaqueManagedObjectStoreClientKMIPV1_2 => 'Opaque Managed Object Store Client KMIP v1.2',
            self::OpaqueManagedObjectStoreServerKMIPV1_0 => 'Opaque Managed Object Store Server KMIP v1.0',
            self::OpaqueManagedObjectStoreServerKMIPV1_1 => 'Opaque Managed Object Store Server KMIP v1.1',
            self::OpaqueManagedObjectStoreServerKMIPV1_2 => 'Opaque Managed Object Store Server KMIP v1.2',
            self::SuiteBMinLOS_128ClientKMIPV1_0 => 'Suite B minLOS_128 Client KMIP v1.0',
            self::SuiteBMinLOS_128ClientKMIPV1_1 => 'Suite B minLOS_128 Client KMIP v1.1',
            self::SuiteBMinLOS_128ClientKMIPV1_2 => 'Suite B minLOS_128 Client KMIP v1.2',
            self::SuiteBMinLOS_128ServerKMIPV1_0 => 'Suite B minLOS_128 Server KMIP v1.0',
            self::SuiteBMinLOS_128ServerKMIPV1_1 => 'Suite B minLOS_128 Server KMIP v1.1',
            self::SuiteBMinLOS_128ServerKMIPV1_2 => 'Suite B minLOS_128 Server KMIP v1.2',
            self::SuiteBMinLOS_192ClientKMIPV1_0 => 'Suite B minLOS_192 Client KMIP v1.0',
            self::SuiteBMinLOS_192ClientKMIPV1_1 => 'Suite B minLOS_192 Client KMIP v1.1',
            self::SuiteBMinLOS_192ClientKMIPV1_2 => 'Suite B minLOS_192 Client KMIP v1.2',
            self::SuiteBMinLOS_192ServerKMIPV1_0 => 'Suite B minLOS_192 Server KMIP v1.0',
            self::SuiteBMinLOS_192ServerKMIPV1_1 => 'Suite B minLOS_192 Server KMIP v1.1',
            self::SuiteBMinLOS_192ServerKMIPV1_2 => 'Suite B minLOS_192 Server KMIP v1.2',
            self::StorageArrayWithSelfEncryptingDriveClientKMIPV1_0 => 'Storage Array with Self Encrypting Drive Client KMIP v1.0',
            self::StorageArrayWithSelfEncryptingDriveClientKMIPV1_1 => 'Storage Array with Self Encrypting Drive Client KMIP v1.1',
            self::StorageArrayWithSelfEncryptingDriveClientKMIPV1_2 => 'Storage Array with Self Encrypting Drive Client KMIP v1.2',
            self::StorageArrayWithSelfEncryptingDriveServerKMIPV1_0 => 'Storage Array with Self Encrypting Drive Server KMIP v1.0',
            self::StorageArrayWithSelfEncryptingDriveServerKMIPV1_1 => 'Storage Array with Self Encrypting Drive Server KMIP v1.1',
            self::StorageArrayWithSelfEncryptingDriveServerKMIPV1_2 => 'Storage Array with Self Encrypting Drive Server KMIP v1.2',
            self::HTTPSClientKMIPV1_0 => 'HTTPS Client KMIP v1.0',
            self::HTTPSClientKMIPV1_1 => 'HTTPS Client KMIP v1.1',
            self::HTTPSClientKMIPV1_2 => 'HTTPS Client KMIP v1.2',
            self::HTTPSServerKMIPV1_0 => 'HTTPS Server KMIP v1.0',
            self::HTTPSServerKMIPV1_1 => 'HTTPS Server KMIP v1.1',
            self::HTTPSServerKMIPV1_2 => 'HTTPS Server KMIP v1.2',
            self::JSONClientKMIPV1_0 => 'JSON Client KMIP v1.0',
            self::JSONClientKMIPV1_1 => 'JSON Client KMIP v1.1',
            self::JSONClientKMIPV1_2 => 'JSON Client KMIP v1.2',
            self::JSONServerKMIPV1_0 => 'JSON Server KMIP v1.0',
            self::JSONServerKMIPV1_1 => 'JSON Server KMIP v1.1',
            self::JSONServerKMIPV1_2 => 'JSON Server KMIP v1.2',
            self::XMLClientKMIPV1_0 => 'XML Client KMIP v1.0',
            self::XMLClientKMIPV1_1 => 'XML Client KMIP v1.1',
            self::XMLClientKMIPV1_2 => 'XML Client KMIP v1.2',
            self::XMLServerKMIPV1_0 => 'XML Server KMIP v1.0',
            self::XMLServerKMIPV1_1 => 'XML Server KMIP v1.1',
            self::XMLServerKMIPV1_2 => 'XML Server KMIP v1.2',
            self::BaselineServerBasicKMIPV1_3 => 'Baseline Server Basic KMIP v1.3',
            self::BaselineServerTLSV1_2KMIPV1_3 => 'Baseline Server TLS v1.2 KMIP v1.3',
            self::BaselineClientBasicKMIPV1_3 => 'Baseline Client Basic KMIP v1.3',
            self::BaselineClientTLSV1_2KMIPV1_3 => 'Baseline Client TLS v1.2 KMIP v1.3',
            self::CompleteServerBasicKMIPV1_3 => 'Complete Server Basic KMIP v1.3',
            self::CompleteServerTLSV1_2KMIPV1_3 => 'Complete Server TLS v1.2 KMIP v1.3',
            self::TapeLibraryClientKMIPV1_3 => 'Tape Library Client KMIP v1.3',
            self::TapeLibraryServerKMIPV1_3 => 'Tape Library Server KMIP v1.3',
            self::SymmetricKeyLifecycleClientKMIPV1_3 => 'Symmetric Key Lifecycle Client KMIP v1.3',
            self::SymmetricKeyLifecycleServerKMIPV1_3 => 'Symmetric Key Lifecycle Server KMIP v1.3',
            self::AsymmetricKeyLifecycleClientKMIPV1_3 => 'Asymmetric Key Lifecycle Client KMIP v1.3',
            self::AsymmetricKeyLifecycleServerKMIPV1_3 => 'Asymmetric Key Lifecycle Server KMIP v1.3',
            self::BasicCryptographicClientKMIPV1_3 => 'Basic Cryptographic Client KMIP v1.3',
            self::BasicCryptographicServerKMIPV1_3 => 'Basic Cryptographic Server KMIP v1.3',
            self::AdvancedCryptographicClientKMIPV1_3 => 'Advanced Cryptographic Client KMIP v1.3',
            self::AdvancedCryptographicServerKMIPV1_3 => 'Advanced Cryptographic Server KMIP v1.3',
            self::RNGCryptographicClientKMIPV1_3 => 'RNG Cryptographic Client KMIP v1.3',
            self::RNGCryptographicServerKMIPV1_3 => 'RNG Cryptographic Server KMIP v1.3',
            self::BasicSymmetricKeyFoundryClientKMIPV1_3 => 'Basic Symmetric Key Foundry Client KMIP v1.3',
            self::IntermediateSymmetricKeyFoundryClientKMIPV1_3 => 'Intermediate Symmetric Key Foundry Client KMIP v1.3',
            self::AdvancedSymmetricKeyFoundryClientKMIPV1_3 => 'Advanced Symmetric Key Foundry Client KMIP v1.3',
            self::SymmetricKeyFoundryServerKMIPV1_3 => 'Symmetric Key Foundry Server KMIP v1.3',
            self::OpaqueManagedObjectStoreClientKMIPV1_3 => 'Opaque Managed Object Store Client KMIP v1.3',
            self::OpaqueManagedObjectStoreServerKMIPV1_3 => 'Opaque Managed Object Store Server KMIP v1.3',
            self::SuiteBMinLOS_128ClientKMIPV1_3 => 'Suite B minLOS_128 Client KMIP v1.3',
            self::SuiteBMinLOS_128ServerKMIPV1_3 => 'Suite B minLOS_128 Server KMIP v1.3',
            self::SuiteBMinLOS_192ClientKMIPV1_3 => 'Suite B minLOS_192 Client KMIP v1.3',
            self::SuiteBMinLOS_192ServerKMIPV1_3 => 'Suite B minLOS_192 Server KMIP v1.3',
            self::StorageArrayWithSelfEncryptingDriveClientKMIPV1_3 => 'Storage Array with Self Encrypting Drive Client KMIP v1.3',
            self::StorageArrayWithSelfEncryptingDriveServerKMIPV1_3 => 'Storage Array with Self Encrypting Drive Server KMIP v1.3',
            self::HTTPSClientKMIPV1_3 => 'HTTPS Client KMIP v1.3',
            self::HTTPSServerKMIPV1_3 => 'HTTPS Server KMIP v1.3',
            self::JSONClientKMIPV1_3 => 'JSON Client KMIP v1.3',
            self::JSONServerKMIPV1_3 => 'JSON Server KMIP v1.3',
            self::XMLClientKMIPV1_3 => 'XML Client KMIP v1.3',
            self::XMLServerKMIPV1_3 => 'XML Server KMIP v1.3',
            self::BaselineServerBasicKMIPV1_4 => 'Baseline Server Basic KMIP v1.4',
            self::BaselineServerTLSV1_2KMIPV1_4 => 'Baseline Server TLS v1.2 KMIP v1.4',
            self::BaselineClientBasicKMIPV1_4 => 'Baseline Client Basic KMIP v1.4',
            self::BaselineClientTLSV1_2KMIPV1_4 => 'Baseline Client TLS v1.2 KMIP v1.4',
            self::CompleteServerBasicKMIPV1_4 => 'Complete Server Basic KMIP v1.4',
            self::CompleteServerTLSV1_2KMIPV1_4 => 'Complete Server TLS v1.2 KMIP v1.4',
            self::TapeLibraryClientKMIPV1_4 => 'Tape Library Client KMIP v1.4',
            self::TapeLibraryServerKMIPV1_4 => 'Tape Library Server KMIP v1.4',
            self::SymmetricKeyLifecycleClientKMIPV1_4 => 'Symmetric Key Lifecycle Client KMIP v1.4',
            self::SymmetricKeyLifecycleServerKMIPV1_4 => 'Symmetric Key Lifecycle Server KMIP v1.4',
            self::AsymmetricKeyLifecycleClientKMIPV1_4 => 'Asymmetric Key Lifecycle Client KMIP v1.4',
            self::AsymmetricKeyLifecycleServerKMIPV1_4 => 'Asymmetric Key Lifecycle Server KMIP v1.4',
            self::BasicCryptographicClientKMIPV1_4 => 'Basic Cryptographic Client KMIP v1.4',
            self::BasicCryptographicServerKMIPV1_4 => 'Basic Cryptographic Server KMIP v1.4',
            self::AdvancedCryptographicClientKMIPV1_4 => 'Advanced Cryptographic Client KMIP v1.4',
            self::AdvancedCryptographicServerKMIPV1_4 => 'Advanced Cryptographic Server KMIP v1.4',
            self::RNGCryptographicClientKMIPV1_4 => 'RNG Cryptographic Client KMIP v1.4',
            self::RNGCryptographicServerKMIPV1_4 => 'RNG Cryptographic Server KMIP v1.4',
            self::BasicSymmetricKeyFoundryClientKMIPV1_4 => 'Basic Symmetric Key Foundry Client KMIP v1.4',
            self::IntermediateSymmetricKeyFoundryClientKMIPV1_4 => 'Intermediate Symmetric Key Foundry Client KMIP v1.4',
            self::AdvancedSymmetricKeyFoundryClientKMIPV1_4 => 'Advanced Symmetric Key Foundry Client KMIP v1.4',
            self::SymmetricKeyFoundryServerKMIPV1_4 => 'Symmetric Key Foundry Server KMIP v1.4',
            self::OpaqueManagedObjectStoreClientKMIPV1_4 => 'Opaque Managed Object Store Client KMIP v1.4',
            self::OpaqueManagedObjectStoreServerKMIPV1_4 => 'Opaque Managed Object Store Server KMIP v1.4',
            self::SuiteBMinLOS_128ClientKMIPV1_4 => 'Suite B minLOS_128 Client KMIP v1.4',
            self::SuiteBMinLOS_128ServerKMIPV1_4 => 'Suite B minLOS_128 Server KMIP v1.4',
            self::SuiteBMinLOS_192ClientKMIPV1_4 => 'Suite B minLOS_192 Client KMIP v1.4',
            self::SuiteBMinLOS_192ServerKMIPV1_4 => 'Suite B minLOS_192 Server KMIP v1.4',
            self::StorageArrayWithSelfEncryptingDriveClientKMIPV1_4 => 'Storage Array with Self Encrypting Drive Client KMIP v1.4',
            self::StorageArrayWithSelfEncryptingDriveServerKMIPV1_4 => 'Storage Array with Self Encrypting Drive Server KMIP v1.4',
            self::HTTPSClientKMIPV1_4 => 'HTTPS Client KMIP v1.4',
            self::HTTPSServerKMIPV1_4 => 'HTTPS Server KMIP v1.4',
            self::JSONClientKMIPV1_4 => 'JSON Client KMIP v1.4',
            self::JSONServerKMIPV1_4 => 'JSON Server KMIP v1.4',
            self::XMLClientKMIPV1_4 => 'XML Client KMIP v1.4',
            self::XMLServerKMIPV1_4 => 'XML Server KMIP v1.4',
            self::CompleteServerBasic => 'Complete Server Basic',
            self::CompleteServerTLSV1_2 => 'Complete Server TLS v1.2',
            self::TapeLibraryClient => 'Tape Library Client',
            self::TapeLibraryServer => 'Tape Library Server',
            self::SymmetricKeyLifecycleClient => 'Symmetric Key Lifecycle Client',
            self::SymmetricKeyLifecycleServer => 'Symmetric Key Lifecycle Server',
            self::AsymmetricKeyLifecycleClient => 'Asymmetric Key Lifecycle Client',
            self::AsymmetricKeyLifecycleServer => 'Asymmetric Key Lifecycle Server',
            self::BasicCryptographicClient => 'Basic Cryptographic Client',
            self::BasicCryptographicServer => 'Basic Cryptographic Server',
            self::AdvancedCryptographicClient => 'Advanced Cryptographic Client',
            self::AdvancedCryptographicServer => 'Advanced Cryptographic Server',
            self::RNGCryptographicClient => 'RNG Cryptographic Client ',
            self::RNGCryptographicServer => 'RNG Cryptographic Server ',
            self::BasicSymmetricKeyFoundryClient => 'Basic Symmetric Key Foundry Client ',
            self::IntermediateSymmetricKeyFoundryClient => 'Intermediate Symmetric Key Foundry Client ',
            self::AdvancedSymmetricKeyFoundryClient => 'Advanced Symmetric Key Foundry Client ',
            self::SymmetricKeyFoundryServer => 'Symmetric Key Foundry Server',
            self::OpaqueManagedObjectStoreClient => 'Opaque Managed Object Store Client ',
            self::OpaqueManagedObjectStoreServer => 'Opaque Managed Object Store Server ',
            self::SuiteBMinLOS_128Client => 'Suite B minLOS_128 Client ',
            self::SuiteBMinLOS_128Server => 'Suite B minLOS_128 Server ',
            self::SuiteBMinLOS_192Client => 'Suite B minLOS_192 Client ',
            self::SuiteBMinLOS_192Server => 'Suite B minLOS_192 Server ',
            self::StorageArrayWithSelfEncryptingDriveClient => 'Storage Array with Self Encrypting Drive Client',
            self::StorageArrayWithSelfEncryptingDriveServer => 'Storage Array with Self Encrypting Drive Server',
            self::HTTPSClient => 'HTTPS Client ',
            self::HTTPSServer => 'HTTPS Server ',
            self::JSONClient => 'JSON Client ',
            self::JSONServer => 'JSON Server ',
            self::XMLClient => 'XML Client ',
            self::XMLServer => 'XML Server ',
            self::AESXTSClient => 'AES XTS Client',
            self::AESXTSServer => 'AES XTS Server',
            self::QuantumSafeClient => 'Quantum Safe Client',
            self::QuantumSafeServer => 'Quantum Safe Server',
            self::PKCS_11Client => 'PKCS#11 Client',
            self::PKCS_11Server => 'PKCS#11 Server',
            self::BaselineClient => 'Baseline Client',
            self::BaselineServer => 'Baseline Server',
            self::CompleteServer => 'Complete Server',
        };
    }

    public function canonicalName(): string
    {
        return self::valueToCanonicalName($this);
    }
}
