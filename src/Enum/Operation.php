<?php

/**
 * DO NOT EDIT. This file is auto-generated by stoakes/kmip-php code generator
 */

declare(strict_types=1);

namespace Stoakes\Kmip\Enum;

enum Operation: int
{
    /** 0x00000001 */
    case Create = 1;

    /** 0x00000002 */
    case CreateKeyPair = 2;

    /** 0x00000003 */
    case Register = 3;

    /** 0x00000004 */
    case Rekey = 4;

    /** 0x00000005 */
    case DeriveKey = 5;

    /** 0x00000006 */
    case Certify = 6;

    /** 0x00000007 */
    case Recertify = 7;

    /** 0x00000008 */
    case Locate = 8;

    /** 0x00000009 */
    case Check = 9;

    /** 0x0000000A */
    case Get = 10;

    /** 0x0000000B */
    case GetAttributes = 11;

    /** 0x0000000C */
    case GetAttributeList = 12;

    /** 0x0000000D */
    case AddAttribute = 13;

    /** 0x0000000E */
    case ModifyAttribute = 14;

    /** 0x0000000F */
    case DeleteAttribute = 15;

    /** 0x00000010 */
    case ObtainLease = 16;

    /** 0x00000011 */
    case GetUsageAllocation = 17;

    /** 0x00000012 */
    case Activate = 18;

    /** 0x00000013 */
    case Revoke = 19;

    /** 0x00000014 */
    case Destroy = 20;

    /** 0x00000015 */
    case Archive = 21;

    /** 0x00000016 */
    case Recover = 22;

    /** 0x00000017 */
    case Validate = 23;

    /** 0x00000018 */
    case Query = 24;

    /** 0x00000019 */
    case Cancel = 25;

    /** 0x0000001A */
    case Poll = 26;

    /** 0x0000001B */
    case Notify = 27;

    /** 0x0000001C */
    case Put = 28;

    /** 0x0000001D */
    case RekeyKeyPair = 29;

    /** 0x0000001E */
    case DiscoverVersions = 30;

    /** 0x0000001F */
    case Encrypt = 31;

    /** 0x00000020 */
    case Decrypt = 32;

    /** 0x00000021 */
    case Sign = 33;

    /** 0x00000022 */
    case SignatureVerify = 34;

    /** 0x00000023 */
    case MAC = 35;

    /** 0x00000024 */
    case MACVerify = 36;

    /** 0x00000025 */
    case RNGRetrieve = 37;

    /** 0x00000026 */
    case RNGSeed = 38;

    /** 0x00000027 */
    case Hash = 39;

    /** 0x00000028 */
    case CreateSplitKey = 40;

    /** 0x00000029 */
    case JoinSplitKey = 41;

    /** 0x0000002A */
    case Import = 42;

    /** 0x0000002B */
    case Export = 43;

    /** 0x0000002C */
    case Log = 44;

    /** 0x0000002D */
    case Login = 45;

    /** 0x0000002E */
    case Logout = 46;

    /** 0x0000002F */
    case DelegatedLogin = 47;

    /** 0x00000030 */
    case AdjustAttribute = 48;

    /** 0x00000031 */
    case SetAttribute = 49;

    /** 0x00000032 */
    case SetEndpointRole = 50;

    /** 0x00000033 */
    case PKCS_11 = 51;

    /** 0x00000034 */
    case Interop = 52;

    /** 0x00000035 */
    case ReProvision = 53;

    public function valueToCanonicalName(self $value): string
    {
        return match($value) {
            self::Create => 'Create',
            self::CreateKeyPair => 'Create Key Pair',
            self::Register => 'Register',
            self::Rekey => 'Re-key',
            self::DeriveKey => 'Derive Key',
            self::Certify => 'Certify',
            self::Recertify => 'Re-certify',
            self::Locate => 'Locate',
            self::Check => 'Check',
            self::Get => 'Get',
            self::GetAttributes => 'Get Attributes',
            self::GetAttributeList => 'Get Attribute List',
            self::AddAttribute => 'Add Attribute',
            self::ModifyAttribute => 'Modify Attribute',
            self::DeleteAttribute => 'Delete Attribute',
            self::ObtainLease => 'Obtain Lease',
            self::GetUsageAllocation => 'Get Usage Allocation',
            self::Activate => 'Activate',
            self::Revoke => 'Revoke',
            self::Destroy => 'Destroy',
            self::Archive => 'Archive',
            self::Recover => 'Recover',
            self::Validate => 'Validate',
            self::Query => 'Query',
            self::Cancel => 'Cancel',
            self::Poll => 'Poll',
            self::Notify => 'Notify',
            self::Put => 'Put',
            self::RekeyKeyPair => 'Re-key Key Pair',
            self::DiscoverVersions => 'Discover Versions',
            self::Encrypt => 'Encrypt',
            self::Decrypt => 'Decrypt',
            self::Sign => 'Sign',
            self::SignatureVerify => 'Signature Verify',
            self::MAC => 'MAC',
            self::MACVerify => 'MAC Verify',
            self::RNGRetrieve => 'RNG Retrieve',
            self::RNGSeed => 'RNG Seed',
            self::Hash => 'Hash',
            self::CreateSplitKey => 'Create Split Key',
            self::JoinSplitKey => 'Join Split Key',
            self::Import => 'Import',
            self::Export => 'Export',
            self::Log => 'Log',
            self::Login => 'Login',
            self::Logout => 'Logout',
            self::DelegatedLogin => 'Delegated Login',
            self::AdjustAttribute => 'Adjust Attribute',
            self::SetAttribute => 'Set Attribute',
            self::SetEndpointRole => 'Set Endpoint Role',
            self::PKCS_11 => 'PKCS#11',
            self::Interop => 'Interop',
            self::ReProvision => 'Re-Provision',
        };
    }

    public function canonicalName(): string
    {
        return self::valueToCanonicalName($this);
    }
}
