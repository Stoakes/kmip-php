<?php

/**
 * DO NOT EDIT. This file is auto-generated by stoakes/kmip-php code generator
 */

declare(strict_types=1);

namespace Stoakes\Kmip\Enum;

enum CryptographicAlgorithm: int
{
    /** 0x00000001 */
    case DES = 1;

    /** 0x00000002 */
    case DES3 = 2;

    /** 0x00000003 */
    case AES = 3;

    /** 0x00000004 */
    case RSA = 4;

    /** 0x00000005 */
    case DSA = 5;

    /** 0x00000006 */
    case ECDSA = 6;

    /** 0x00000007 */
    case HMACSHA1 = 7;

    /** 0x00000008 */
    case HMACSHA224 = 8;

    /** 0x00000009 */
    case HMACSHA256 = 9;

    /** 0x0000000A */
    case HMACSHA384 = 10;

    /** 0x0000000B */
    case HMACSHA512 = 11;

    /** 0x0000000C */
    case HMACMD5 = 12;

    /** 0x0000000D */
    case DH = 13;

    /** 0x0000000E */
    case ECDH = 14;

    /** 0x0000000F */
    case ECMQV = 15;

    /** 0x00000010 */
    case Blowfish = 16;

    /** 0x00000011 */
    case Camellia = 17;

    /** 0x00000012 */
    case CAST5 = 18;

    /** 0x00000013 */
    case IDEA = 19;

    /** 0x00000014 */
    case MARS = 20;

    /** 0x00000015 */
    case RC2 = 21;

    /** 0x00000016 */
    case RC4 = 22;

    /** 0x00000017 */
    case RC5 = 23;

    /** 0x00000018 */
    case SKIPJACK = 24;

    /** 0x00000019 */
    case Twofish = 25;

    /** 0x0000001A */
    case EC = 26;

    /** 0x0000001B */
    case OneTimePad = 27;

    /** 0x0000001C */
    case ChaCha20 = 28;

    /** 0x0000001D */
    case Poly1305 = 29;

    /** 0x0000001E */
    case ChaCha20Poly1305 = 30;

    /** 0x0000001F */
    case SHA3224 = 31;

    /** 0x00000020 */
    case SHA3256 = 32;

    /** 0x00000021 */
    case SHA3384 = 33;

    /** 0x00000022 */
    case SHA3512 = 34;

    /** 0x00000023 */
    case HMACSHA3224 = 35;

    /** 0x00000024 */
    case HMACSHA3256 = 36;

    /** 0x00000025 */
    case HMACSHA3384 = 37;

    /** 0x00000026 */
    case HMACSHA3512 = 38;

    /** 0x00000027 */
    case SHAKE128 = 39;

    /** 0x00000028 */
    case SHAKE256 = 40;

    /** 0x00000029 */
    case ARIA = 41;

    /** 0x0000002A */
    case SEED = 42;

    /** 0x0000002B */
    case SM2 = 43;

    /** 0x0000002C */
    case SM3 = 44;

    /** 0x0000002D */
    case SM4 = 45;

    /** 0x0000002E */
    case GOSTR34_102012 = 46;

    /** 0x0000002F */
    case GOSTR34_112012 = 47;

    /** 0x00000030 */
    case GOSTR34_132015 = 48;

    /** 0x00000031 */
    case GOST2814789 = 49;

    /** 0x00000032 */
    case XMSS = 50;

    /** 0x00000033 */
    case SPHINCS256 = 51;

    /** 0x00000034 */
    case McEliece = 52;

    /** 0x00000035 */
    case McEliece6960119 = 53;

    /** 0x00000036 */
    case McEliece8192128 = 54;

    /** 0x00000037 */
    case Ed25519 = 55;

    /** 0x00000038 */
    case Ed448 = 56;

    public function valueToCanonicalName(self $value): string
    {
        return match($value) {
            self::DES => 'DES',
            self::DES3 => '3DES',
            self::AES => 'AES',
            self::RSA => 'RSA',
            self::DSA => 'DSA',
            self::ECDSA => 'ECDSA',
            self::HMACSHA1 => 'HMAC-SHA1',
            self::HMACSHA224 => 'HMAC-SHA224',
            self::HMACSHA256 => 'HMAC-SHA256',
            self::HMACSHA384 => 'HMAC-SHA384',
            self::HMACSHA512 => 'HMAC-SHA512',
            self::HMACMD5 => 'HMAC-MD5',
            self::DH => 'DH',
            self::ECDH => 'ECDH',
            self::ECMQV => 'ECMQV',
            self::Blowfish => 'Blowfish',
            self::Camellia => 'Camellia',
            self::CAST5 => 'CAST5',
            self::IDEA => 'IDEA',
            self::MARS => 'MARS',
            self::RC2 => 'RC2',
            self::RC4 => 'RC4',
            self::RC5 => 'RC5',
            self::SKIPJACK => 'SKIPJACK',
            self::Twofish => 'Twofish',
            self::EC => 'EC',
            self::OneTimePad => 'One Time Pad',
            self::ChaCha20 => 'ChaCha20',
            self::Poly1305 => 'Poly1305',
            self::ChaCha20Poly1305 => 'ChaCha20Poly1305',
            self::SHA3224 => 'SHA3-224',
            self::SHA3256 => 'SHA3-256',
            self::SHA3384 => 'SHA3-384',
            self::SHA3512 => 'SHA3-512',
            self::HMACSHA3224 => 'HMAC-SHA3-224',
            self::HMACSHA3256 => 'HMAC-SHA3-256',
            self::HMACSHA3384 => 'HMAC-SHA3-384',
            self::HMACSHA3512 => 'HMAC-SHA3-512',
            self::SHAKE128 => 'SHAKE-128',
            self::SHAKE256 => 'SHAKE-256',
            self::ARIA => 'ARIA',
            self::SEED => 'SEED',
            self::SM2 => 'SM2',
            self::SM3 => 'SM3',
            self::SM4 => 'SM4',
            self::GOSTR34_102012 => 'GOST R 34.10-2012',
            self::GOSTR34_112012 => 'GOST R 34.11-2012',
            self::GOSTR34_132015 => 'GOST R 34.13-2015',
            self::GOST2814789 => 'GOST 28147-89',
            self::XMSS => 'XMSS',
            self::SPHINCS256 => 'SPHINCS-256',
            self::McEliece => 'McEliece',
            self::McEliece6960119 => 'McEliece-6960119',
            self::McEliece8192128 => 'McEliece-8192128',
            self::Ed25519 => 'Ed25519',
            self::Ed448 => 'Ed448',
        };
    }

    public function canonicalName(): string
    {
        return self::valueToCanonicalName($this);
    }
}
