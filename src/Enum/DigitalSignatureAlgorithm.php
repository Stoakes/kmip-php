<?php

/**
 * DO NOT EDIT. This file is auto-generated by stoakes/kmip-php code generator
 */

declare(strict_types=1);

namespace Stoakes\Kmip\Enum;

enum DigitalSignatureAlgorithm: int
{
    /** 0x00000001 */
    case MD2WithRSAEncryption = 1;

    /** 0x00000002 */
    case MD5WithRSAEncryption = 2;

    /** 0x00000003 */
    case SHA1WithRSAEncryption = 3;

    /** 0x00000004 */
    case SHA224WithRSAEncryption = 4;

    /** 0x00000005 */
    case SHA256WithRSAEncryption = 5;

    /** 0x00000006 */
    case SHA384WithRSAEncryption = 6;

    /** 0x00000007 */
    case SHA512WithRSAEncryption = 7;

    /** 0x00000008 */
    case RSASSAPSS = 8;

    /** 0x00000009 */
    case DSAWithSHA1 = 9;

    /** 0x0000000A */
    case DSAWithSHA224 = 10;

    /** 0x0000000B */
    case DSAWithSHA256 = 11;

    /** 0x0000000C */
    case ECDSAWithSHA1 = 12;

    /** 0x0000000D */
    case ECDSAWithSHA224 = 13;

    /** 0x0000000E */
    case ECDSAWithSHA256 = 14;

    /** 0x0000000F */
    case ECDSAWithSHA384 = 15;

    /** 0x00000010 */
    case ECDSAWithSHA512 = 16;

    /** 0x00000011 */
    case SHA3256WithRSAEncryption = 17;

    /** 0x00000012 */
    case SHA3384WithRSAEncryption = 18;

    /** 0x00000013 */
    case SHA3512WithRSAEncryption = 19;

    public function valueToCanonicalName(self $value): string
    {
        return match($value) {
            self::MD2WithRSAEncryption => 'MD2 with RSA Encryption',
            self::MD5WithRSAEncryption => 'MD5 with RSA Encryption',
            self::SHA1WithRSAEncryption => 'SHA-1 with RSA Encryption',
            self::SHA224WithRSAEncryption => 'SHA-224 with RSA Encryption',
            self::SHA256WithRSAEncryption => 'SHA-256 with RSA Encryption',
            self::SHA384WithRSAEncryption => 'SHA-384 with RSA Encryption',
            self::SHA512WithRSAEncryption => 'SHA-512 with RSA Encryption',
            self::RSASSAPSS => 'RSASSA-PSS',
            self::DSAWithSHA1 => 'DSA with SHA-1',
            self::DSAWithSHA224 => 'DSA with SHA224',
            self::DSAWithSHA256 => 'DSA with SHA256',
            self::ECDSAWithSHA1 => 'ECDSA with SHA-1',
            self::ECDSAWithSHA224 => 'ECDSA with SHA224',
            self::ECDSAWithSHA256 => 'ECDSA with SHA256',
            self::ECDSAWithSHA384 => 'ECDSA with SHA384',
            self::ECDSAWithSHA512 => 'ECDSA with SHA512',
            self::SHA3256WithRSAEncryption => 'SHA3-256 with RSA Encryption',
            self::SHA3384WithRSAEncryption => 'SHA3-384 with RSA Encryption',
            self::SHA3512WithRSAEncryption => 'SHA3-512 with RSA Encryption',
        };
    }

    public function canonicalName(): string
    {
        return self::valueToCanonicalName($this);
    }
}
