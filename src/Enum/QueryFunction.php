<?php

/**
 * DO NOT EDIT. This file is auto-generated by stoakes/kmip-php code generator
 */

declare(strict_types=1);

namespace Stoakes\Kmip\Enum;

enum QueryFunction: int
{
    /** 0x00000001 */
    case QueryOperations = 1;

    /** 0x00000002 */
    case QueryObjects = 2;

    /** 0x00000003 */
    case QueryServerInformation = 3;

    /** 0x00000004 */
    case QueryApplicationNamespaces = 4;

    /** 0x00000005 */
    case QueryExtensionList = 5;

    /** 0x00000006 */
    case QueryExtensionMap = 6;

    /** 0x00000007 */
    case QueryAttestationTypes = 7;

    /** 0x00000008 */
    case QueryRNGs = 8;

    /** 0x00000009 */
    case QueryValidations = 9;

    /** 0x0000000A */
    case QueryProfiles = 10;

    /** 0x0000000B */
    case QueryCapabilities = 11;

    /** 0x0000000C */
    case QueryClientRegistrationMethods = 12;

    /** 0x0000000D */
    case QueryDefaultsInformation = 13;

    /** 0x0000000E */
    case QueryStorageProtectionMasks = 14;

    public function valueToCanonicalName(self $value): string
    {
        return match($value) {
            self::QueryOperations => 'Query Operations',
            self::QueryObjects => 'Query Objects',
            self::QueryServerInformation => 'Query Server Information',
            self::QueryApplicationNamespaces => 'Query Application Namespaces',
            self::QueryExtensionList => 'Query Extension List',
            self::QueryExtensionMap => 'Query Extension Map',
            self::QueryAttestationTypes => 'Query Attestation Types',
            self::QueryRNGs => 'Query RNGs',
            self::QueryValidations => 'Query Validations',
            self::QueryProfiles => 'Query Profiles',
            self::QueryCapabilities => 'Query Capabilities',
            self::QueryClientRegistrationMethods => 'Query Client Registration Methods',
            self::QueryDefaultsInformation => 'Query Defaults Information',
            self::QueryStorageProtectionMasks => 'Query Storage Protection Masks',
        };
    }

    public function canonicalName(): string
    {
        return self::valueToCanonicalName($this);
    }
}
