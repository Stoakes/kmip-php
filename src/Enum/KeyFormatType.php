<?php

/**
 * DO NOT EDIT. This file is auto-generated by stoakes/kmip-php code generator
 */

declare(strict_types=1);

namespace Stoakes\Kmip\Enum;

enum KeyFormatType: int
{
    /** 0x00000001 */
    case Raw = 1;

    /** 0x00000002 */
    case Opaque = 2;

    /** 0x00000003 */
    case PKCS_1 = 3;

    /** 0x00000004 */
    case PKCS_8 = 4;

    /** 0x00000005 */
    case X_509 = 5;

    /** 0x00000006 */
    case ECPrivateKey = 6;

    /** 0x00000007 */
    case TransparentSymmetricKey = 7;

    /** 0x00000008 */
    case TransparentDSAPrivateKey = 8;

    /** 0x00000009 */
    case TransparentDSAPublicKey = 9;

    /** 0x0000000A */
    case TransparentRSAPrivateKey = 10;

    /** 0x0000000B */
    case TransparentRSAPublicKey = 11;

    /** 0x0000000C */
    case TransparentDHPrivateKey = 12;

    /** 0x0000000D */
    case TransparentDHPublicKey = 13;

    /** 0x0000000E */
    case TransparentECDSAPrivateKey = 14;

    /** 0x0000000F */
    case TransparentECDSAPublicKey = 15;

    /** 0x00000010 */
    case TransparentECDHPrivateKey = 16;

    /** 0x00000011 */
    case TransparentECDHPublicKey = 17;

    /** 0x00000012 */
    case TransparentECMQVPrivateKey = 18;

    /** 0x00000013 */
    case TransparentECMQVPublicKey = 19;

    /** 0x00000014 */
    case TransparentECPrivateKey = 20;

    /** 0x00000015 */
    case TransparentECPublicKey = 21;

    /** 0x00000016 */
    case PKCS_12 = 22;

    public function valueToCanonicalName(self $value): string
    {
        return match($value) {
            self::Raw => 'Raw',
            self::Opaque => 'Opaque',
            self::PKCS_1 => 'PKCS#1',
            self::PKCS_8 => 'PKCS#8',
            self::X_509 => 'X.509',
            self::ECPrivateKey => 'ECPrivateKey',
            self::TransparentSymmetricKey => 'Transparent Symmetric Key',
            self::TransparentDSAPrivateKey => 'Transparent DSA Private Key',
            self::TransparentDSAPublicKey => 'Transparent DSA Public Key',
            self::TransparentRSAPrivateKey => 'Transparent RSA Private Key',
            self::TransparentRSAPublicKey => 'Transparent RSA Public Key',
            self::TransparentDHPrivateKey => 'Transparent DH Private Key',
            self::TransparentDHPublicKey => 'Transparent DH Public Key',
            self::TransparentECDSAPrivateKey => 'Transparent ECDSA Private Key',
            self::TransparentECDSAPublicKey => 'Transparent ECDSA Public Key',
            self::TransparentECDHPrivateKey => 'Transparent ECDH Private Key',
            self::TransparentECDHPublicKey => 'Transparent ECDH Public Key',
            self::TransparentECMQVPrivateKey => 'Transparent ECMQV Private Key',
            self::TransparentECMQVPublicKey => 'Transparent ECMQV Public Key',
            self::TransparentECPrivateKey => 'Transparent EC Private Key',
            self::TransparentECPublicKey => 'Transparent EC Public Key',
            self::PKCS_12 => 'PKCS#12',
        };
    }

    public function canonicalName(): string
    {
        return self::valueToCanonicalName($this);
    }
}
